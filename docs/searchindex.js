Search.setIndex({"docnames": ["_autosummary/gpflux", "api", "autoapi/gpflux/architectures/constant_input_dim_deep_gp/index", "autoapi/gpflux/architectures/index", "autoapi/gpflux/callbacks/index", "autoapi/gpflux/encoders/directly_parameterized_encoder/index", "autoapi/gpflux/encoders/index", "autoapi/gpflux/exceptions/index", "autoapi/gpflux/experiment_support/ci_utils/index", "autoapi/gpflux/experiment_support/index", "autoapi/gpflux/experiment_support/tensorboard/index", "autoapi/gpflux/helpers/index", "autoapi/gpflux/index", "autoapi/gpflux/layers/basis_functions/fourier_features/base/index", "autoapi/gpflux/layers/basis_functions/fourier_features/index", "autoapi/gpflux/layers/basis_functions/fourier_features/quadrature/gaussian/index", "autoapi/gpflux/layers/basis_functions/fourier_features/quadrature/index", "autoapi/gpflux/layers/basis_functions/fourier_features/random/index", "autoapi/gpflux/layers/basis_functions/fourier_features/utils/index", "autoapi/gpflux/layers/basis_functions/index", "autoapi/gpflux/layers/bayesian_dense_layer/index", "autoapi/gpflux/layers/gp_layer/index", "autoapi/gpflux/layers/index", "autoapi/gpflux/layers/latent_variable_layer/index", "autoapi/gpflux/layers/likelihood_layer/index", "autoapi/gpflux/layers/trackable_layer/index", "autoapi/gpflux/losses/index", "autoapi/gpflux/math/index", "autoapi/gpflux/models/deep_gp/index", "autoapi/gpflux/models/index", "autoapi/gpflux/optimization/index", "autoapi/gpflux/optimization/keras_natgrad/index", "autoapi/gpflux/runtime_checks/index", "autoapi/gpflux/sampling/index", "autoapi/gpflux/sampling/kernel_with_feature_decomposition/index", "autoapi/gpflux/sampling/sample/index", "autoapi/gpflux/sampling/utils/index", "autoapi/gpflux/types/index", "autoapi/gpflux/version/index", "index", "notebooks/benchmarks", "notebooks/deep_cde", "notebooks/deep_gp_samples", "notebooks/efficient_posterior_sampling", "notebooks/efficient_sampling", "notebooks/gpflux_features", "notebooks/gpflux_with_keras_layers", "notebooks/intro", "notebooks/keras_integration", "notebooks/weight_space_approximation", "tutorials"], "filenames": ["_autosummary/gpflux.rst", "api.rst", "autoapi/gpflux/architectures/constant_input_dim_deep_gp/index.rst", "autoapi/gpflux/architectures/index.rst", "autoapi/gpflux/callbacks/index.rst", "autoapi/gpflux/encoders/directly_parameterized_encoder/index.rst", "autoapi/gpflux/encoders/index.rst", "autoapi/gpflux/exceptions/index.rst", "autoapi/gpflux/experiment_support/ci_utils/index.rst", "autoapi/gpflux/experiment_support/index.rst", "autoapi/gpflux/experiment_support/tensorboard/index.rst", "autoapi/gpflux/helpers/index.rst", "autoapi/gpflux/index.rst", "autoapi/gpflux/layers/basis_functions/fourier_features/base/index.rst", "autoapi/gpflux/layers/basis_functions/fourier_features/index.rst", "autoapi/gpflux/layers/basis_functions/fourier_features/quadrature/gaussian/index.rst", "autoapi/gpflux/layers/basis_functions/fourier_features/quadrature/index.rst", "autoapi/gpflux/layers/basis_functions/fourier_features/random/index.rst", "autoapi/gpflux/layers/basis_functions/fourier_features/utils/index.rst", "autoapi/gpflux/layers/basis_functions/index.rst", "autoapi/gpflux/layers/bayesian_dense_layer/index.rst", "autoapi/gpflux/layers/gp_layer/index.rst", "autoapi/gpflux/layers/index.rst", "autoapi/gpflux/layers/latent_variable_layer/index.rst", "autoapi/gpflux/layers/likelihood_layer/index.rst", "autoapi/gpflux/layers/trackable_layer/index.rst", "autoapi/gpflux/losses/index.rst", "autoapi/gpflux/math/index.rst", "autoapi/gpflux/models/deep_gp/index.rst", "autoapi/gpflux/models/index.rst", "autoapi/gpflux/optimization/index.rst", "autoapi/gpflux/optimization/keras_natgrad/index.rst", "autoapi/gpflux/runtime_checks/index.rst", "autoapi/gpflux/sampling/index.rst", "autoapi/gpflux/sampling/kernel_with_feature_decomposition/index.rst", "autoapi/gpflux/sampling/sample/index.rst", "autoapi/gpflux/sampling/utils/index.rst", "autoapi/gpflux/types/index.rst", "autoapi/gpflux/version/index.rst", "index.rst", "notebooks/benchmarks.ipynb", "notebooks/deep_cde.ipynb", "notebooks/deep_gp_samples.ipynb", "notebooks/efficient_posterior_sampling.ipynb", "notebooks/efficient_sampling.ipynb", "notebooks/gpflux_features.ipynb", "notebooks/gpflux_with_keras_layers.ipynb", "notebooks/intro.ipynb", "notebooks/keras_integration.ipynb", "notebooks/weight_space_approximation.ipynb", "tutorials.rst"], "titles": ["gpflux", "API reference", "gpflux.architectures.constant_input_dim_deep_gp", "gpflux.architectures", "gpflux.callbacks", "gpflux.encoders.directly_parameterized_encoder", "gpflux.encoders", "gpflux.exceptions", "gpflux.experiment_support.ci_utils", "gpflux.experiment_support", "gpflux.experiment_support.tensorboard", "gpflux.helpers", "gpflux", "gpflux.layers.basis_functions.fourier_features.base", "gpflux.layers.basis_functions.fourier_features", "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian", "gpflux.layers.basis_functions.fourier_features.quadrature", "gpflux.layers.basis_functions.fourier_features.random", "gpflux.layers.basis_functions.fourier_features.utils", "gpflux.layers.basis_functions", "gpflux.layers.bayesian_dense_layer", "gpflux.layers.gp_layer", "gpflux.layers", "gpflux.layers.latent_variable_layer", "gpflux.layers.likelihood_layer", "gpflux.layers.trackable_layer", "gpflux.losses", "gpflux.math", "gpflux.models.deep_gp", "gpflux.models", "gpflux.optimization", "gpflux.optimization.keras_natgrad", "gpflux.runtime_checks", "gpflux.sampling", "gpflux.sampling.kernel_with_feature_decomposition", "gpflux.sampling.sample", "gpflux.sampling.utils", "gpflux.types", "gpflux.version", "Welcome to GPflux", "Benchmarks", "Deep Gaussian processes with Latent Variables", "Deep GP samples", "Efficient Posterior Gaussian Process Sampling", "Efficient sampling with Gaussian processes and Random Fourier Features", "Why GPflux is a modern (deep) GP library", "Hybrid Deep GP models: combining GP and Neural Network layers", "Introduction to GPflux", "Keras integration", "Weight Space Approximation with Random Fourier Features", "Tutorials"], "terms": {"The": [0, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 43, 44, 45, 46, 49], "librari": [0, 12, 39, 50], "root": [0, 12, 20, 22, 43], "see": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 39, 41, 43, 44, 47], "deepgp": [0, 2, 3, 12, 22, 24, 26, 28, 29, 30, 31, 39, 41, 44, 45, 47, 48], "core": [0, 12, 42, 43, 44, 45, 46, 47, 48, 49], "deep": [0, 2, 3, 11, 12, 20, 22, 23, 33, 35, 39, 40, 50], "gp": [0, 2, 3, 7, 11, 12, 21, 22, 23, 28, 29, 30, 31, 32, 33, 35, 39, 40, 43, 49, 50], "model": [0, 2, 3, 4, 5, 6, 12, 20, 22, 23, 24, 26, 30, 31, 39, 40, 41, 43, 47, 48, 49, 50], "which": [0, 2, 4, 8, 11, 12, 20, 21, 22, 23, 28, 29, 30, 31, 33, 34, 35, 41, 44, 45, 47, 48, 49], "i": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50], "built": [0, 12, 39, 49], "out": [0, 12, 39, 41, 45, 47], "differ": [0, 2, 3, 11, 12, 21, 22, 35, 40, 43, 44, 49], "layer": [0, 2, 3, 5, 6, 11, 12, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 43, 48, 49, 50], "thi": [2, 3, 4, 5, 6, 7, 8, 11, 14, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "provid": [2, 7, 11, 13, 14, 15, 16, 18, 20, 21, 22, 26, 28, 29, 33, 34, 35, 39, 43, 44, 46, 49], "build_constant_input_dim_deep_gp": [2, 3, 45], "build": [2, 3, 11, 13, 14, 15, 16, 17, 20, 22, 39, 46, 47, 49], "arbitrari": 2, "depth": [2, 21, 28, 34, 35, 47], "where": [2, 11, 14, 17, 21, 22, 28, 33, 34, 35, 36, 43, 44, 45, 47, 49], "each": [2, 3, 4, 5, 6, 11, 21, 22, 23, 28, 29, 32, 35, 36, 41, 43, 49], "hidden": [2, 3], "ha": [2, 5, 6, 11, 14, 17, 20, 22, 30, 31, 35, 43, 44, 46, 47, 48, 49], "same": [2, 3, 5, 6, 11, 21, 22, 23, 28, 29, 35, 39, 44, 47, 48, 49], "input": [2, 3, 5, 6, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 32, 35, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "dimension": [2, 3, 5, 6, 11, 14, 17, 20, 21, 22, 28, 29, 35, 39, 41, 42, 43, 44, 46, 47, 49], "data": [2, 3, 10, 11, 21, 22, 23, 24, 28, 29, 30, 31, 40, 43, 45, 46, 47, 49], "construct_basic_inducing_vari": [2, 11, 42], "num_induc": [2, 3, 11, 41, 45, 46, 47, 48], "int": [2, 3, 4, 5, 6, 8, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 28, 29, 32, 39, 41, 47], "list": [2, 4, 8, 10, 11, 21, 22, 23, 28, 29, 30, 31, 37, 43, 47], "input_dim": [2, 3, 11, 20, 22, 28, 29, 44, 46, 48], "output_dim": [2, 11, 20, 22, 42, 46, 47, 48], "none": [2, 4, 5, 6, 11, 14, 15, 16, 17, 20, 21, 22, 23, 24, 28, 29, 30, 31, 33, 34, 35, 41, 43, 45, 46, 47, 49], "share_vari": [2, 11, 42], "bool": [2, 3, 4, 8, 11, 20, 21, 22, 23, 24, 28, 29, 30, 31, 35], "fals": [2, 4, 8, 11, 20, 21, 22, 24, 28, 35, 41, 44, 46, 49], "z_init": [2, 11, 42, 48], "numpi": [2, 3, 5, 6, 11, 20, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49], "ndarrai": [2, 3, 5, 6, 11, 20, 22], "gpflow": [2, 4, 5, 6, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "inducing_vari": [2, 11, 21, 22, 32, 35, 39, 41, 44, 46, 47, 49], "multioutputinducingvari": [2, 11, 21, 22, 32], "sourc": [2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39], "construct": [2, 11, 21, 22, 28, 29, 30, 31, 44, 46, 47], "compat": [2, 5, 6, 11, 21, 28, 29, 32, 44, 46, 47], "us": [2, 3, 4, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "gplayer": [2, 3, 7, 11, 21, 22, 24, 28, 30, 31, 32, 39, 41, 42, 44, 46, 47, 48], "": [2, 3, 4, 5, 6, 10, 11, 14, 16, 17, 20, 21, 22, 23, 26, 28, 29, 30, 31, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "paramet": [2, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 43, 44, 46, 47, 49], "total": [2, 11, 41, 46, 47], "number": [2, 3, 5, 6, 7, 8, 11, 13, 14, 15, 16, 17, 20, 21, 22, 28, 29, 32, 35, 41, 42, 43, 46, 47, 49], "induc": [2, 3, 11, 21, 22, 30, 31, 32, 35, 41, 44, 46, 47, 49], "variabl": [2, 3, 5, 6, 8, 11, 14, 15, 16, 17, 20, 21, 22, 23, 25, 32, 35, 44, 46, 47, 48, 49, 50], "m": [2, 3, 11, 13, 14, 15, 17, 27, 35, 36, 39, 41, 42, 43], "can": [2, 4, 5, 6, 7, 11, 14, 17, 20, 21, 22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 43, 44, 45, 46, 47, 49], "freeli": [2, 11], "chosen": [2, 3, 11, 41, 49], "user": [2, 11, 47], "gener": [2, 11, 20, 42, 43, 49], "advic": [2, 11], "set": [2, 4, 5, 6, 8, 11, 13, 14, 15, 16, 17, 18, 21, 22, 23, 30, 31, 41, 43, 48, 49], "high": [2, 3, 11, 43], "possibl": [2, 11, 21, 22, 49], "smaller": [2, 8, 11], "than": [2, 11, 14, 17, 26, 49], "datapoint": [2, 3, 5, 6, 11, 21, 22, 23, 28, 29, 41, 47], "comput": [2, 11, 13, 14, 15, 16, 17, 21, 22, 23, 24, 27, 28, 33, 34, 35, 36, 39, 43, 44, 47], "complex": [2, 11, 43, 44], "cubic": [2, 11, 21, 28, 35, 43], "If": [2, 3, 4, 5, 6, 11, 20, 21, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 41, 49], "pass": [2, 11, 21, 22, 23, 28, 29, 30, 31, 33, 34, 35, 41, 43, 45, 47, 48], "element": [2, 4, 5, 6, 11, 14, 17, 22, 23, 30, 31, 47], "specifi": [2, 3, 4, 7, 8, 11, 20, 21, 22, 23, 28, 29, 32, 42, 43, 44, 46, 47, 49], "featur": [2, 11, 13, 14, 15, 16, 17, 18, 21, 22, 28, 29, 32, 33, 34, 35, 39, 43, 45, 46, 50], "x": [2, 3, 11, 14, 15, 17, 18, 21, 28, 29, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "typic": [2, 3, 8, 11, 47], "correspond": [2, 11, 22, 23, 27, 28, 29, 33, 34, 35, 41, 45], "shape": [2, 3, 5, 6, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 27, 28, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "1": [2, 3, 5, 11, 20, 22, 23, 24, 25, 27, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "For": [2, 4, 11, 21, 22, 23, 28, 30, 31, 33, 34, 35, 36, 39, 43], "inducingpoint": [2, 11, 39, 41, 44, 46, 47, 49], "z": [2, 11, 21, 22, 39, 41, 42, 43, 44, 46, 47, 48, 49], "output": [2, 11, 13, 15, 20, 21, 22, 23, 24, 26, 28, 29, 35, 39, 40, 41, 42, 46, 47], "target": [2, 11, 22, 23, 24, 28, 29, 37, 39, 41, 43, 44, 45, 47, 48], "y": [2, 11, 22, 24, 26, 28, 29, 39, 41, 43, 44, 45, 46, 47, 48, 49], "latent": [2, 5, 6, 7, 11, 21, 22, 23, 24, 28, 29, 32, 42, 46, 47, 50], "determin": [2, 3, 11, 20, 21, 22, 23, 27, 35, 36, 49], "creat": [2, 5, 6, 11, 14, 15, 16, 17, 28, 29, 39, 41, 43, 44, 45, 46, 47, 49], "when": [2, 4, 5, 7, 11, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 35, 43, 45, 49], "redund": [2, 11], "becaus": [2, 5, 6, 11, 21, 22, 24, 26, 28, 29, 35, 41, 43, 44, 47, 49], "code": [2, 8, 11, 40, 47, 49], "assum": [2, 3, 5, 6, 11, 22, 23, 47, 49], "len": [2, 11, 42, 43, 46, 47, 49], "true": [2, 3, 4, 8, 11, 20, 21, 22, 24, 28, 30, 31, 34, 41, 42, 43, 44, 45, 46, 48, 49], "otherwis": [2, 3, 5, 6, 8, 11, 22, 23, 28], "two": [2, 3, 5, 6, 11, 21, 22, 23, 28, 35, 39, 41, 43, 46, 48, 49], "argument": [2, 4, 11, 21, 22, 23, 26, 28, 29, 30, 31, 32, 42, 49], "contradict": [2, 11], "other": [2, 3, 4, 8, 11, 21, 28, 29, 30, 31, 32, 33, 34, 35, 42, 43, 44, 45, 46, 47, 48, 49], "you": [2, 11, 21, 22, 23, 26, 28, 29, 30, 31, 33, 35, 39, 43, 47, 49], "must": [2, 11, 13, 14, 15, 16, 20, 22, 26, 28, 29, 30, 31, 43], "also": [2, 4, 5, 6, 11, 15, 18, 20, 21, 22, 23, 30, 31, 43, 46, 47, 49], "raw": [2, 11], "valu": [2, 3, 5, 6, 11, 20, 21, 22, 23, 26, 28, 29, 30, 31, 35, 41, 43, 44, 45, 46, 47, 49], "initialis": [2, 3, 4, 5, 6, 7, 11, 20, 39], "default": [2, 5, 6, 11, 20, 21, 22, 23, 24, 28, 29, 42, 46, 47], "from": [2, 8, 11, 14, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49], "n": [2, 3, 4, 5, 6, 8, 11, 13, 14, 15, 16, 17, 20, 21, 22, 27, 28, 33, 34, 35, 36, 39, 42, 43, 45, 49], "0": [2, 3, 4, 5, 6, 11, 14, 17, 20, 21, 22, 23, 24, 25, 28, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "depend": [2, 11, 21, 22, 23, 28, 29], "singl": [2, 11, 21, 22, 23, 30, 31, 39], "point": [2, 3, 11, 13, 15, 20, 21, 22, 23, 28, 29, 30, 31, 35, 41, 43, 49], "all": [2, 3, 4, 11, 13, 14, 15, 16, 21, 28, 29, 30, 31, 32, 43, 48, 49], "should": [2, 5, 6, 11, 21, 22, 23, 24, 28, 30, 31, 49], "rank": [2, 3, 5, 6, 11, 33, 34, 35], "dimens": [2, 3, 11, 20, 22, 27, 35, 43, 46], "ithat": [2, 11], "three": [2, 11, 43, 46, 49], "tensor": [2, 3, 5, 6, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 44, 45], "construct_basic_kernel": [2, 11, 42], "kernel": [2, 4, 7, 11, 13, 14, 15, 16, 17, 18, 21, 22, 28, 32, 33, 34, 35, 39, 41, 42, 43, 46, 47, 49], "share_hyperparam": [2, 11, 42], "multioutputkernel": [2, 11, 21, 22, 32], "A": [2, 3, 4, 5, 6, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 27, 28, 29, 33, 34, 35, 36, 39, 43], "hyperparamet": [2, 11, 30, 31, 45, 49], "share": [2, 11, 13], "across": [2, 5, 6, 11, 43, 49], "separ": [2, 11, 28, 29], "separateindepend": [2, 11], "return": [2, 5, 6, 8, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 43, 44, 45, 46, 47, 48], "equal": [2, 3, 4, 11, 43, 49], "onli": [2, 11, 21, 22, 23, 24, 28, 29, 33, 34, 35, 41, 42, 43, 46, 47, 49], "we": [2, 3, 5, 6, 11, 13, 14, 15, 16, 17, 21, 22, 23, 26, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "requir": [2, 5, 6, 11, 21, 22, 23, 26, 28, 29, 43, 48, 49], "type": [2, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 28, 29, 32, 35, 43, 44], "varianc": [2, 3, 11, 14, 17, 20, 21, 22, 24, 26, 28, 29, 40, 41, 42, 43, 45, 46, 49], "lengthscal": [2, 11, 41, 42, 43, 46, 49], "squar": [2, 5, 6, 11, 14, 17, 20, 22, 41, 43], "exponenti": [2, 11, 14, 17, 41], "matern12": [2, 11], "so": [2, 11, 13, 14, 15, 16, 24, 34, 41, 42, 46, 47, 49], "have": [2, 3, 5, 6, 11, 22, 23, 24, 28, 29, 30, 31, 35, 39, 40, 43, 46, 47, 49], "construct_mean_funct": [2, 11], "d_in": [2, 11], "d_out": [2, 11], "mean_funct": [2, 4, 11, 21, 22, 32, 39, 41, 42, 44, 46, 47, 48], "meanfunct": [2, 7, 11, 21, 22, 32], "ident": [2, 11, 14, 17, 20, 21, 22, 41, 42, 45, 46, 47, 48], "ar": [2, 4, 5, 6, 7, 11, 14, 17, 21, 22, 26, 28, 29, 32, 33, 34, 35, 36, 40, 41, 43, 44, 45, 46, 47, 49], "princip": [2, 11], "compon": [2, 11, 13, 14, 15, 16, 17], "matrix": [2, 5, 6, 11, 27, 35, 36, 43], "linear": [2, 11, 21, 22, 46], "mean": [2, 3, 5, 6, 11, 20, 21, 22, 23, 24, 28, 29, 32, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49], "function": [2, 8, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 44, 46, 47, 49], "untrain": [2, 11], "To": [2, 11, 26, 28, 29, 35, 39, 42, 43, 44, 45, 46, 47, 48, 49], "chang": [2, 11, 21, 22, 23, 43], "set_train": [2, 11, 41, 44, 49], "arrai": [2, 4, 5, 6, 11, 28, 29, 43], "class": [2, 3, 4, 5, 6, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 41, 43, 44, 46, 47, 48, 49], "num_data": [2, 3, 5, 6, 11, 20, 21, 22, 28, 29, 39, 41, 42, 44, 46, 47, 48], "num_sampl": [2, 11, 20, 21, 22, 41, 42, 49], "full_cov": [2, 11, 21, 22, 24, 28, 29, 42, 43], "full_output_cov": [2, 11, 21, 22, 24, 28, 29], "num_latent_gp": [2, 11, 21, 22, 39, 41, 44, 46, 47], "whiten": [2, 3, 11, 21, 22, 35, 44, 45], "name": [2, 4, 11, 21, 22, 23, 41, 46, 49], "str": [2, 4, 10, 11, 21, 22, 23, 30, 31, 43, 49], "verbos": [2, 11, 21, 22, 39, 41, 44, 45, 46, 47, 48], "base": [2, 3, 4, 5, 6, 7, 8, 11, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 43, 44, 49], "tfp": [2, 11, 21, 22, 23, 24, 26, 28, 37, 41, 46], "distributionlambda": [2, 11, 21, 22, 23, 24, 28], "spars": [2, 11, 21, 22, 33, 34, 35, 39, 47, 49], "variat": [2, 11, 20, 21, 22, 23, 24, 26, 28, 39, 47, 49], "multioutput": [2, 11, 13, 15, 21, 22, 32, 39], "hold": [2, 10, 11, 20, 21, 22, 35, 43, 49], "distribut": [2, 5, 6, 11, 20, 21, 22, 23, 24, 26, 28, 30, 31, 35, 36, 37, 41, 43, 46, 47, 49], "train": [2, 3, 4, 5, 6, 11, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 39, 40, 41, 43, 46, 47, 48, 49], "dataset": [2, 5, 6, 11, 20, 21, 22, 28, 29, 39, 40, 41, 43, 49], "appli": [2, 11, 21, 22, 32], "want": [2, 11, 21, 22, 23, 26, 28, 29, 30, 31, 48], "mai": [2, 8, 11, 21, 22], "instead": [2, 11, 21, 22, 24, 26, 27, 28, 35, 46, 48], "sampl": [2, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 28, 39, 41, 49], "draw": [2, 11, 20, 21, 22, 23, 28, 35, 36, 43, 49], "convert": [2, 11, 21, 22], "tf": [2, 4, 5, 6, 10, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49], "_convert_to_tensor_fn": [2, 11, 21, 22], "Will": [2, 5, 11, 20, 21, 22, 23, 24, 25], "store": [2, 11, 21, 22, 40, 43, 45], "attribut": [2, 11, 21, 22, 26, 28, 29], "without": [2, 11, 21, 22, 49], "prefix": [2, 11, 21, 22], "method": [2, 4, 11, 13, 14, 15, 16, 17, 21, 22, 23, 24, 28, 29, 30, 31, 33, 34, 35, 43, 47, 49], "behaviour": [2, 11, 20, 21, 22, 41], "call": [2, 4, 5, 6, 11, 13, 14, 15, 16, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 33, 34, 35, 41, 44, 45, 46, 47, 48], "predict": [2, 11, 20, 21, 22, 23, 26, 28, 29, 40, 43, 44, 45, 46, 47, 49], "margin": [2, 11, 21, 22, 24], "diagon": [2, 5, 6, 11, 21, 22, 27, 36, 43], "covari": [2, 5, 6, 11, 21, 22, 27, 33, 34, 35, 36, 42, 43], "respect": [2, 11, 21, 22, 23, 33, 34, 35, 43, 44, 49], "full": [2, 11, 21, 22, 27, 36, 41, 42], "over": [2, 6, 11, 20, 21, 22, 23, 35, 36, 43, 45, 49], "e": [2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 35, 39, 41, 43, 44, 45, 49], "g": [2, 3, 5, 7, 11, 13, 14, 15, 16, 17, 21, 22, 24, 26, 28, 29, 30, 31, 33, 34, 35, 39, 43, 44, 45, 49], "linearcoregion": [2, 11, 21, 22], "size": [2, 4, 11, 21, 22, 23, 41, 43, 44, 49], "q_mu": [2, 11, 21, 22, 35, 41, 44, 46, 47, 49], "q_sqrt": [2, 3, 11, 21, 22, 35, 41, 44, 46, 47, 48], "infer": [2, 11, 21, 22, 23, 28, 39, 41, 43, 47, 49], "parameteris": [2, 3, 5, 6, 11, 14, 17, 21, 22, 23, 35, 41], "mode": [2, 11, 21, 22, 23, 28], "show": [2, 11, 21, 22, 39, 41, 42, 43, 44, 46, 48, 49], "debug": [2, 11, 21, 22], "inform": [2, 4, 11, 21, 22, 24, 28, 29, 33, 34, 35, 39, 45], "obtain": [2, 11, 21, 22, 28, 29, 35, 42, 43, 44, 49], "correct": [2, 11, 21, 22, 24, 28, 29], "scale": [2, 11, 20, 21, 22, 28, 29, 33, 34, 35, 39, 43, 49], "between": [2, 11, 21, 22, 28, 29, 34, 43, 49], "fit": [2, 4, 11, 21, 22, 24, 28, 29, 30, 31, 39, 45, 46, 47, 48], "kl": [2, 11, 20, 21, 22, 23, 28, 29, 45], "term": [2, 11, 21, 22, 28, 29, 43, 49], "evid": [2, 11, 21, 22, 28, 29], "lower": [2, 11, 21, 22, 28, 29, 41, 43, 45, 46, 47], "bound": [2, 11, 21, 22, 28, 29], "elbo": [2, 11, 21, 22, 28, 29, 45, 47], "non": [2, 11, 21, 22, 41, 46, 47, 49], "centr": [2, 11, 20, 21, 22], "represent": [2, 11, 21, 22, 43], "exampl": [2, 11, 21, 22, 23, 28, 29, 33, 34, 35, 43, 45, 49], "u": [2, 3, 11, 14, 17, 20, 21, 22, 30, 31, 49], "f": [2, 11, 21, 22, 24, 26, 28, 29, 35, 36, 39, 43, 47, 49], "choleski": [2, 11, 20, 21, 22, 27, 35, 36, 43, 49], "kuu": [2, 11, 21, 22], "v": [2, 11, 21, 22, 41], "an": [2, 4, 5, 6, 7, 11, 21, 22, 23, 26, 28, 29, 30, 31, 32, 34, 35, 39, 41, 42, 43, 47, 49], "approxim": [2, 5, 6, 11, 13, 14, 15, 16, 17, 20, 21, 22, 23, 28, 33, 34, 35, 43, 44, 50], "posterior": [2, 5, 6, 11, 20, 21, 22, 23, 24, 28, 33, 35, 39, 41, 44, 49, 50], "q": [2, 11, 20, 21, 22, 24, 26, 28, 30, 31, 43], "q_sqrt\u1d40": [2, 11, 21, 22], "prior": [2, 11, 20, 21, 22, 23, 41, 43, 44, 46, 47, 48, 49], "p": [2, 3, 11, 13, 14, 15, 17, 20, 21, 22, 24, 26, 28, 29, 35, 36, 43, 47, 49], "directli": [2, 5, 6, 11, 21, 22, 23, 30, 31], "drawn": [2, 11, 21, 22, 35, 36, 49], "coerc": [2, 11, 21, 22], "whether": [2, 11, 20, 21, 22, 39], "ed": [2, 11, 21, 22], "parametris": [2, 11, 21, 22, 23], "triangular": [2, 11, 21, 22], "factor": [2, 3, 11, 20, 21, 22, 44, 45, 48], "tensortyp": [2, 5, 6, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 34, 35, 36], "tupl": [2, 5, 6, 11, 21, 22, 23, 24, 28, 29, 32, 45], "make": [2, 11, 21, 22, 24, 30, 31, 39, 43, 44, 45, 48], "test": [2, 11, 20, 21, 22, 24, 28, 29, 40, 43, 44, 46, 47, 48, 49], "includ": [2, 4, 11, 21, 22, 24, 26, 30, 31], "contribut": [2, 11, 21, 22, 39], "its": [2, 11, 14, 17, 21, 22, 24, 28, 29, 33, 34, 35, 45, 46, 49], "follow": [2, 4, 11, 21, 22, 28, 30, 31, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49], "co": [2, 11, 14, 17, 20, 21, 22, 49], "d": [2, 11, 13, 14, 15, 16, 17, 20, 21, 22, 27, 28, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 48, 49], "w": [2, 5, 6, 11, 15, 18, 21, 22, 41, 42, 43, 44, 45, 46, 47, 48, 49], "r": [2, 11, 14, 17, 21, 22, 43, 49], "t": [2, 11, 21, 22, 41, 42, 44, 45], "abov": [2, 11, 21, 22, 39, 43, 46, 49], "arg": [2, 5, 6, 11, 21, 22, 30, 31], "ani": [2, 4, 5, 6, 11, 21, 22, 26, 27, 28, 29, 30, 31, 35, 43, 49], "kwarg": [2, 5, 6, 11, 13, 14, 15, 16, 17, 21, 22, 30, 31], "dict": [2, 4, 11, 21, 22], "upon": [2, 11, 20, 21, 22], "super": [2, 11, 21, 22], "_make_distribution_fn": [2, 11, 21, 22], "convert_to_tensor": [2, 11, 21, 22, 42], "add": [2, 11, 21, 22, 23, 24, 26, 28, 29, 38], "specif": [2, 11, 21, 22, 26], "loss": [2, 4, 11, 12, 20, 21, 22, 23, 24, 28, 29, 41, 44, 45, 46, 47, 48], "given": [2, 11, 20, 21, 22, 24, 26, 37], "diverg": [2, 11, 20, 21, 22, 23], "per": [2, 11, 21, 22, 23, 28, 29, 30, 31, 46], "prior_kl": [2, 11, 20, 21, 22], "previous_layer_output": [2, 11, 21, 22], "previou": [2, 11, 21, 22, 23, 24, 28], "coercibl": [2, 11, 21, 22], "correl": [2, 11, 21, 22, 42], "uncorrel": [2, 11, 21, 22], "document": [2, 11, 21, 22, 30, 31], "likelihoodlay": [2, 22, 24, 26, 28, 29, 39, 41, 44, 46, 47, 48], "likelihood": [2, 3, 4, 22, 24, 26, 28, 29, 39, 41, 44, 46, 47, 48, 49], "trackable_lay": [2, 20, 22, 23, 24, 28], "trackablelay": [2, 5, 6, 20, 22, 23, 24, 25, 26, 28, 44, 46, 47, 48], "kera": [2, 4, 5, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 39, 41, 44, 45, 47], "wrap": [2, 22, 24, 26, 28, 29, 30, 31, 37], "expect": [2, 8, 22, 24, 26, 28, 43, 47], "multivariatenormaldiag": [2, 22, 24, 26, 28, 41], "describ": [2, 13, 15, 20, 22, 23, 24, 28, 29, 37, 39], "neg": [2, 22, 24, 26, 28, 40, 45], "mathbb": [2, 14, 17, 22, 24, 26, 28, 49], "_": [2, 11, 14, 17, 22, 23, 24, 26, 28, 35, 36, 43, 44, 48, 49], "log": [2, 4, 22, 24, 26, 28, 40, 43, 45], "under": [2, 8, 22, 24, 28, 43, 49], "predict_mean_and_var": [2, 22, 24, 28], "either": [2, 4, 22, 24, 26, 28, 29, 43], "togeth": [2, 22, 24, 26, 28, 33, 34, 35, 44], "likelihoodloss": [2, 22, 24, 26, 28, 46], "sequenti": [2, 22, 24, 26, 28, 29], "do": [2, 22, 23, 24, 26, 28, 29, 41], "both": [2, 13, 14, 15, 16, 22, 24, 26, 28, 29, 33, 34, 35, 43, 47, 49], "onc": [2, 22, 24, 26, 28, 49], "would": [2, 22, 24, 26, 28, 41, 49], "twice": [2, 22, 24, 26, 28], "likelihoodoutput": [2, 22, 24, 28], "current": [2, 4, 22, 24, 28, 30], "preced": [2, 22, 24, 28], "turn": [2, 22, 24, 28, 41], "well": [2, 22, 24, 28, 41, 43, 44, 47], "contain": [2, 5, 6, 8, 10, 11, 22, 24, 27, 28, 29, 30, 35, 36, 43, 45, 47], "f_layer": [2, 28, 29, 41], "tf_kera": [2, 4, 5, 13, 15, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 33, 34, 35, 39, 41, 44, 45, 46, 47, 48], "target_dim": [2, 28, 29], "default_model_class": [2, 28, 29, 30, 31, 48], "combin": [2, 22, 23, 28, 29, 39, 43, 44, 48, 50], "f\u2099": [2, 28, 29], "f\u2082": [2, 28, 29], "f\u2081": [2, 28, 29], "might": [2, 3, 11, 22, 23, 28, 29, 49], "dure": [2, 5, 6, 22, 23, 28, 29, 45, 47], "inherit": [2, 22, 23, 28, 29], "layerwithobserv": [2, 22, 23, 28, 29, 37], "those": [2, 28, 29, 49], "observ": [2, 22, 23, 28, 29, 35, 36, 41, 43, 47, 49], "predict_f": [2, 28, 29, 43, 44, 47, 49], "need": [2, 5, 20, 22, 23, 24, 25, 28, 29, 41, 43, 44, 45, 46, 47, 48], "dtype": [2, 22, 23, 28, 29, 41, 43, 44, 45, 46, 49], "default_float": [2, 22, 23, 28, 29, 43, 44, 46, 49], "subclass": [2, 13, 14, 15, 16, 22, 23, 28, 29, 44, 46, 47, 48], "itself": [2, 28, 29], "access": [2, 28, 29], "as_training_model": [2, 28, 29, 30, 31, 39, 41, 44, 45, 47, 48], "as_prediction_model": [2, 28, 29, 41, 45, 47, 48], "case": [2, 13, 15, 28, 29, 33, 34, 35, 41, 47, 49], "instanc": [2, 11, 21, 26, 28, 29, 30, 31, 35, 44, 48], "docstr": [2, 28, 29], "more": [2, 5, 6, 11, 14, 17, 21, 27, 28, 29, 30, 31, 35, 42, 43, 44, 45, 49], "detail": [2, 3, 15, 18, 28, 29, 30, 31, 41, 44, 47], "altern": [2, 28, 29, 43, 48, 49], "explicitli": [2, 26, 28, 29, 44, 46, 47, 48], "model_class": [2, 28, 29, 30, 31, 48], "automat": [2, 28, 29, 43, 49], "detect": [2, 21, 28, 29, 32], "just": [2, 28, 29, 30, 44], "likelihood_lay": [2, 22, 28, 29, 39, 41, 44, 47, 48], "semant": [2, 28, 29, 39, 48], "accept": [2, 22, 23, 28, 29, 45], "could": [2, 28, 29, 33, 34, 35, 42, 43, 44, 45, 46, 47, 48, 49], "optim": [2, 12, 28, 29, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "natgradmodel": [2, 28, 29, 30, 31, 48], "static": [2, 28, 29, 37, 45], "_validate_num_data": [2, 28, 29], "check": [2, 8, 21, 28, 29, 32, 37, 39], "consist": [2, 3, 20, 21, 22, 28, 29, 33, 35, 44, 46], "option": [2, 28, 29, 49], "valid": [2, 13, 15, 20, 28, 29, 37], "_validate_dtyp": [2, 28, 29], "defin": [2, 14, 17, 28, 29, 41, 46, 49], "rais": [2, 5, 7, 21, 28, 29, 32], "valueerror": [2, 28, 29], "incorrect": [2, 28, 29], "_evaluate_deep_gp": [2, 28, 29], "evalu": [2, 13, 15, 21, 28, 29, 33, 34, 35, 39, 43, 44, 47, 49], "addit": [2, 15, 18, 28, 29], "keyword": [2, 4, 11, 28, 29], "_evaluate_likelihood": [2, 28, 29], "f_output": [2, 28, 29], "doe": [2, 5, 28, 29, 43, 46], "support": [2, 21, 28, 29, 31, 35, 39, 44, 45, 46, 47, 48], "latentvariablelay": [2, 6, 22, 23, 28, 29, 41], "present": [2, 28, 29], "compil": [2, 28, 29, 30, 31, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "handl": [2, 28, 29, 30, 31, 41, 47], "NOT": [2, 28, 29], "here": [2, 28, 29, 39, 41, 48], "endpoint": [2, 28, 29], "pattern": [2, 10, 28, 29], "dummi": [2, 28, 29, 46], "overrid": [2, 28, 29], "xtest": [2, 28, 29], "config": [2, 3, 13, 15, 43, 44, 45, 46, 49], "configur": [2, 3, 46, 49], "inner_layer_qsqrt_factor": [2, 3, 45], "float": [2, 3, 20, 22], "multipl": [2, 3, 7, 21, 28, 32, 35, 39, 44], "rescal": [2, 3], "small": [2, 3, 41], "1e": [2, 3, 5, 6, 20, 22, 41, 43, 44, 45, 48, 49], "5": [2, 3, 5, 6, 20, 22, 23, 24, 25, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "reduc": [2, 3, 33, 34, 35, 45, 46], "nois": [2, 3, 41, 43, 49], "start": [2, 3, 41, 45, 47, 49], "likelihood_noise_vari": [2, 3, 45], "gaussian": [2, 3, 16, 21, 33, 34, 35, 36, 39, 42, 46, 48, 49, 50], "math": [2, 3, 12, 43], "k_": [2, 3], "uu": [2, 3], "seealso": [2, 3], "_construct_kernel": 2, "is_last_lay": 2, "squaredexponenti": [2, 11, 39, 41, 42, 46, 47], "ard": 2, "2": [2, 4, 5, 8, 11, 14, 17, 20, 22, 23, 24, 25, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "6": [2, 41, 42, 43, 44, 45, 46, 47, 48, 49], "part": [2, 26, 46, 49], "last": [2, 26, 30, 31, 42, 46, 49], "num_lay": [2, 3, 42, 45], "larg": [2, 3, 33, 34, 35, 39, 43, 49], "salimbeni": [2, 3, 39, 41], "deisenroth": [2, 3, 39], "sd17": [2, 3, 39, 47], "most": [2, 3, 22, 23, 28, 35, 43], "notabl": [2, 3], "being": [2, 3, 42, 46, 47], "keep": [2, 3, 45, 47], "slow": [2, 3, 4], "regress": [2, 3, 33, 34, 35, 43, 47, 49], "task": [2, 3, 4], "perform": [2, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49], "classif": [2, 3], "retriev": [2, 3], "locat": [2, 3, 21, 28, 30, 31, 35, 41, 43, 44, 49], "k": [2, 3, 14, 17, 21, 28, 33, 34, 35, 41, 43, 44, 49], "hyper": [2, 3], "pre": 3, "constant_input_dim_deep_gp": 3, "implement": [4, 5, 6, 20, 21, 23, 26, 28, 29, 30, 31, 35, 44, 47, 49], "enabl": [4, 33, 35, 42, 43, 44, 45, 46, 47, 48, 49], "monitor": [4, 44, 48], "modeltotensorboard": 4, "integr": [4, 8, 30], "tensorboard": [4, 9, 45], "log_dir": 4, "keywords_to_monitor": 4, "max_siz": 4, "3": [4, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "histogram_freq": 4, "write_graph": 4, "write_imag": 4, "update_freq": 4, "epoch": [4, 39, 41, 44, 45, 46, 47, 48], "profile_batch": 4, "embeddings_freq": 4, "embeddings_metadata": 4, "thin": [4, 49], "wrapper": 4, "around": 4, "path": 4, "directori": 4, "save": 4, "file": [4, 39], "read": 4, "ad": [4, 21, 27, 36, 47], "maximum": 4, "inclus": 4, "written": 4, "independ": 4, "scalar": [4, 10, 14, 17, 43], "tensorflow": [4, 5, 20, 22, 23, 24, 25, 30, 31, 41, 42, 43, 44, 45, 46, 47, 48, 49], "doc": 4, "convent": 4, "whose": [4, 22, 23, 41], "match": [4, 10, 42, 46, 47], "integ": 4, "write": [4, 45], "metric": [4, 26, 43], "everi": [4, 45], "th": 4, "batch": [4, 5, 6, 22, 23, 41], "them": [4, 22, 23, 30, 31, 44, 45, 47], "end": [4, 14, 17, 35, 36, 43, 49], "note": [4, 5, 6, 8, 22, 23, 26, 30, 31, 42, 43, 46, 49], "too": 4, "frequent": 4, "down": [4, 45], "set_model": 4, "extend": 4, "kerasmodeltotensorboard": 4, "mimic": 4, "summari": 4, "on_train_batch_end": 4, "map": [4, 5, 6, 13, 14, 15, 16, 17, 18, 22, 23, 30, 31], "index": [4, 43], "within": [4, 21, 28, 31, 35, 37, 43, 49], "result": [4, 40, 41, 43, 44, 49], "on_epoch_end": 4, "parametr": [5, 6, 41, 47], "work": [5, 8, 21, 28, 30, 31, 35, 42, 44, 45, 46, 47], "mini": [5, 6], "except": [5, 12, 21, 32], "encoderinitializationerror": [5, 7], "directlyparameterizednormaldiag": [5, 6, 7, 41], "correctli": [5, 7], "initi": [5, 7, 11, 20, 21, 22, 32, 45], "self": [5, 7, 21, 32], "help": [5, 7, 21, 32, 42, 43, 46], "accur": [5, 7, 14, 17, 21, 32, 49], "signatur": [5, 7, 21, 32], "With": [5, 20, 22, 23, 24, 25], "releas": [5, 20, 22, 23, 24, 25], "our": [5, 20, 22, 23, 24, 25, 43, 45, 46, 47, 49], "workaround": [5, 20, 22, 23, 24, 25], "longer": [5, 20, 22, 23, 24, 25, 41], "prowler": [5, 20, 22, 23, 24, 25], "io": [5, 20, 22, 23, 24, 25], "189": [5, 20, 22, 23, 24, 25], "remov": [5, 20, 22, 23, 24, 25, 30, 31, 41, 44, 46, 47, 48], "version": [5, 12, 20, 22, 23, 24, 25, 39, 41, 44, 46, 47, 48], "latent_dim": [5, 6], "direct": [5, 6, 49], "normal": [5, 6, 11, 13, 14, 15, 16, 17, 20, 35, 36, 41, 43, 46, 49], "standard": [5, 6, 11, 20, 22, 23, 28, 43, 49], "deviat": [5, 6, 11, 20, 26, 41], "field": [5, 6, 11, 20, 22, 23], "learn": [5, 6, 33, 34, 35, 39, 44, 45, 49], "computation": [5, 6, 43], "veri": [5, 6, 44, 45, 47], "effici": [5, 6, 14, 17, 21, 28, 33, 34, 35, 39, 49, 50], "larger": [5, 6], "greatli": [5, 6], "simplifi": [5, 6], "neural": [5, 6, 11, 20, 22, 33, 34, 35, 39, 50], "network": [5, 6, 11, 20, 22, 41, 50], "amort": [5, 6, 22, 23, 28, 41], "No": [5, 6], "associ": [5, 6, 33, 34, 35, 41], "dutordoir": [5, 6, 33, 34, 35, 39, 41], "et": [5, 6, 20, 21, 22, 28, 33, 34, 35, 41, 43, 49], "al": [5, 6, 20, 21, 22, 28, 33, 34, 35, 41, 43, 49], "dshd18": [5, 6, 22, 23, 39, 41], "thorough": [5, 6, 44], "explan": [5, 6, 44, 48], "multivari": [5, 6, 35, 36, 43, 49], "np": [5, 6, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "random": [5, 6, 13, 14, 15, 16, 18, 21, 22, 23, 28, 33, 34, 35, 39, 41, 42, 43, 50], "randn": [5, 6, 41], "01": [5, 6, 39, 41, 42, 43, 45, 47, 48], "row": [5, 6, 49], "consequ": [5, 6, 43], "std": [5, 6, 40, 41, 45, 46, 47, 49], "ones": [5, 6, 41, 43, 44, 49], "directly_parameterized_encod": 6, "custom": [7, 30, 31], "gplayerincompatibilityexcept": [7, 21, 32], "misconfigur": [7, 21, 32], "caus": [7, 21, 32], "reason": [7, 21, 32, 43], "common": [7, 18, 21, 32], "incompat": [7, 21, 32], "wrong": [7, 21, 32], "inducingvari": [7, 21, 32, 35], "encod": [7, 12, 22, 23, 41], "util": [8, 9, 14, 25, 27, 33, 41, 42, 43, 44, 45, 46, 47, 48, 49], "experi": [8, 9, 40, 43, 49], "notebook": [8, 9, 21, 28, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 49], "is_continuous_integr": 8, "run": [8, 39, 40, 45], "continu": 8, "ci": 8, "machin": [8, 33, 34, 35, 39, 42, 43, 44, 45, 46, 47, 48, 49], "environ": 8, "github": 8, "action": 8, "circleci": 8, "jenkin": 8, "framework": [8, 39, 44], "notebook_nit": 8, "test_n": 8, "iter": [8, 10, 43, 45, 49], "notebook_rang": 8, "rang": [8, 41, 42, 43, 44, 45, 49], "shorter": 8, "length": 8, "notebook_list": 8, "lst": 8, "subset": 8, "complet": [8, 43], "ci_util": [9, 48], "event": 10, "minim": [10, 49], "tensorboard_event_iter": 10, "file_pattern": 10, "yield": 10, "preprocess": 10, "string": 10, "vector": [10, 35, 36, 49], "repres": [10, 21, 22, 23, 28, 33, 34, 35, 44, 47, 49], "filenam": 10, "glob": 10, "shell": 10, "wildcard": 10, "object": [11, 13, 15, 20, 22, 23, 24, 26, 37, 43, 44, 45, 47, 49], "construct_gp_lay": [11, 48], "kernel_class": [11, 43, 49], "stationari": [11, 13, 14, 17, 43, 47, 49], "gp_layer": [11, 22, 30, 31, 41, 42, 44, 46, 47], "vanilla": [11, 21, 28, 35, 39, 43, 49], "among": 11, "zero": [11, 20, 22, 39, 40, 41, 42, 43, 44, 45, 47, 49], "pick": 11, "simpl": [11, 39, 43, 45, 46, 47], "lambda": 11, "period": 11, "It": [11, 21, 24, 28, 35, 44, 46, 47, 48, 49], "make_dataclass_from_class": 11, "dataclass": 11, "updat": [11, 41, 43, 49], "take": [11, 22, 23, 28, 45], "regular": [11, 30, 31], "superset": 11, "decor": 11, "kei": [11, 47], "supersed": 11, "xavier_initialization_numpi": [11, 20, 22], "weight": [11, 14, 17, 20, 21, 22, 28, 34, 35, 39, 43, 44, 45, 50], "xavier": [11, 20], "glorot": [11, 20], "yoshua": [11, 20], "bengio": [11, 20], "understand": [11, 20, 42], "difficulti": [11, 20], "feedforward": [11, 20], "proceed": [11, 20, 39], "thirteenth": [11, 20], "intern": [11, 20, 33, 34, 35, 39, 49], "confer": [11, 20, 33, 34, 35, 39], "artifici": [11, 20, 39], "intellig": [11, 20, 39], "statist": [11, 20, 33, 34, 35, 39, 41, 47], "jmlr": [11, 20], "workshop": [11, 20], "2010": [11, 20], "sqrt": [11, 14, 17, 20, 41, 43, 44, 45, 46, 47, 48, 49], "text": [11, 20, 35, 36, 41, 43, 45, 47, 49], "architectur": [12, 45], "experiment_support": [12, 42], "callback": [12, 30, 31, 44, 48], "helper": [12, 42, 43, 44, 46, 47, 48], "runtime_check": 12, "basi": [13, 14, 15, 16, 17, 19, 49], "shapetyp": [13, 14, 15, 16, 17, 20, 22, 37], "union": [13, 15, 20, 37], "like": [13, 15, 20, 37, 39, 45, 49], "fourierfeaturesbas": [13, 14, 15, 16], "n_compon": [13, 14, 15, 16, 17, 43, 49], "abc": [13, 15, 21, 28, 35], "fourier": [13, 14, 15, 16, 17, 18, 21, 28, 33, 34, 35, 43, 50], "quadratur": [13, 14, 17], "mont": [13, 14, 15, 16, 17], "carlo": [13, 14, 15, 16, 17], "node": [13, 14, 15, 16, 17], "etc": [13, 14, 15, 16, 17, 45], "numer": [13, 14, 15, 16, 17, 27, 35, 43], "compute_output_shap": [13, 15], "input_shap": [13, 14, 15, 16, 17, 20, 22], "tensorshap": [13, 15], "get_config": [13, 15], "abstract": [13, 15, 21, 22, 23, 28, 35], "_compute_const": [13, 14, 15, 16, 17], "constant": [13, 14, 15, 16, 17, 33, 34, 35, 43], "_compute_bas": [13, 14, 15, 16, 17], "kernelwithfeaturedecomposit": [14, 21, 28, 33, 34, 35, 43, 44, 49], "quadraturefourierfeatur": [14, 15, 16], "2m": [14, 15, 16, 17, 48], "orthogonalrandomfeatur": [14, 17], "randomfourierfeatur": [14, 17], "orthogon": [14, 17, 39], "orf": [14, 17], "ysc": [14, 17, 39], "16": [14, 17, 39, 43, 48], "randomfourierfeaturesbas": [14, 17], "rff": [14, 15, 17, 18, 44], "essenti": [14, 17], "approach": [14, 17, 21, 28, 35, 41, 47], "rr07": [14, 15, 17, 18, 39], "realiz": [14, 17], "bochner": [14, 17, 33, 34, 35, 43, 49], "theorem": [14, 17, 33, 34, 35, 43, 49], "sum": [14, 17, 33, 34, 35], "mathbf": [14, 17], "phi": [14, 17, 43, 49], "top": [14, 17, 42], "finit": [14, 17, 33, 34, 35, 43, 44, 49], "frac": [14, 17, 49], "sigma": [14, 17, 43, 49], "ell": [14, 17], "begin": [14, 17, 35, 36, 43], "bmatrix": [14, 17], "boldsymbol": [14, 17, 43, 49], "theta": [14, 17], "_1": [14, 17, 43], "sin": [14, 17], "vdot": [14, 17], "sim": [14, 17, 21, 28, 35, 43, 49], "spectral": [14, 17, 49], "densiti": [14, 17, 39, 40, 41, 49], "At": [14, 17], "least": [14, 17], "variant": [14, 17], "desir": [14, 17, 49], "theoret": [14, 17], "properti": [14, 17, 21, 28, 30, 31, 33, 34, 35, 44, 47], "counterpart": [14, 17], "form": [14, 17, 33, 34, 35, 36, 43, 49], "phase": [14, 17], "shift": [14, 17, 41, 46], "cosin": [14, 17], "randomfourierfeaturescosin": [14, 17, 43, 44, 49], "ss15": [14, 15, 17, 18, 39], "tau": [14, 17], "_m": [14, 17], "mathcal": [14, 17, 43, 49], "pi": [14, 17, 49], "equival": [14, 17], "elementari": [14, 17], "trigonometr": [14, 17], "decompositon": 15, "coeffici": [15, 16, 17, 33, 34, 35, 44], "gauss": 15, "christoffel": 15, "aka": 15, "_bases_concat": [15, 18], "origin": [15, 18, 22, 23, 27, 28, 35, 45], "prescrib": [15, 18], "rahimi": [15, 18, 33, 34, 35, 39, 43, 49], "recht": [15, 18, 33, 34, 35, 39, 43, 49], "2007": [15, 18, 33, 34, 35, 39, 43, 49], "qff": 16, "decomposit": [18, 33, 34, 35, 43], "_bases_cosin": 18, "b": [18, 27, 35, 41, 42, 47, 49], "fourier_featur": [19, 43, 44, 49], "bayesiandenselay": [20, 22], "bayesian": [20, 22, 44, 49], "dens": [20, 22, 46], "fulli": [20, 22, 23], "connect": [20, 22], "w_mu": [20, 22], "w_sqrt": [20, 22], "activ": [20, 22, 46], "callabl": [20, 21, 22, 28, 35, 44], "is_mean_field": [20, 22], "temperatur": [20, 22], "0001": [20, 22], "cool": [20, 22], "heat": [20, 22], "exclud": [20, 22], "bia": [20, 22, 46], "regularis": [20, 22], "As": [20, 22, 39, 43, 44, 46, 47, 48], "suggest": [20, 22], "how": [20, 22, 30, 31, 39, 42, 43, 44, 46, 49], "good": [20, 22, 41, 43], "bay": [20, 22], "realli": [20, 22], "wenzel": [20, 22], "2020": [20, 22, 33, 34, 35, 39], "cold": [20, 22], "4": [20, 22, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49], "necessari": [20, 22, 24, 41, 49], "first": [20, 22, 39, 43, 46, 49], "predict_sampl": [20, 22], "els": [20, 22, 42, 49], "meanandvari": [20, 22, 30, 31], "w_sqrt\u00b2": [20, 22], "process": [21, 33, 34, 35, 39, 42, 46, 49, 50], "_cholesky_with_jitt": [21, 27, 36], "cov": [21, 27, 35, 36, 42], "jitter": [21, 27, 36, 43], "default_jitt": [21, 27, 36], "improv": [21, 27, 36], "stabil": [21, 27, 36], "verify_compat": [21, 32], "__call__": [21, 28, 35], "new": [21, 28, 30, 31, 35, 36, 49], "importantli": [21, 28, 35, 44], "time": [21, 28, 35, 41, 43, 44, 45, 47, 49], "achiev": [21, 28, 35], "costli": [21, 28, 35, 44], "_efficient_sample_conditional_gaussian": [21, 28, 35], "wilson": [21, 28, 35, 39, 43, 49], "wbt": [21, 28, 35, 39, 43, 44, 49], "20": [21, 28, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "_efficient_sample_matheron_rul": [21, 28, 35], "tutori": [21, 28, 34, 35, 39, 46], "space": [21, 28, 33, 34, 35, 43, 44, 50], "overview": [21, 28, 34, 35, 47], "__add__": [21, 28, 35], "allow": [21, 28, 33, 34, 35, 44, 46], "summat": [21, 28, 35], "efficient_sampl": [21, 33, 35, 44], "basis_funct": [22, 43, 44, 49], "bayesian_dense_lay": 22, "latent_variable_lay": 22, "compositor": [22, 23], "agnost": [22, 23], "factoris": [22, 23], "famili": [22, 23], "sdhd19": [22, 23, 39, 41], "concaten": [22, 23, 41], "appropri": [22, 23, 42, 43, 44, 45, 46, 47, 48, 49], "axi": [22, 23, 41, 43, 49], "through": [22, 23, 30, 31, 43, 49], "layer_input": [22, 23, 28, 42], "latent_variable_sampl": [22, 23], "observationtyp": [22, 23, 28, 37], "seed": [22, 23], "compos": [22, 23], "din": [22, 23], "dout": [22, 23], "indic": [22, 23, 28, 43, 49], "oper": [22, 23, 24, 42, 43, 44, 45, 46, 47, 48, 49], "_inference_posterior": [22, 23], "get": [22, 23], "final": [22, 23, 24, 41, 43, 46], "_inference_latent_samples_and_loss": [22, 23], "forward": [22, 23], "henc": [22, 23, 49], "unus": [22, 23], "_prediction_latent_sampl": [22, 23], "_local_kl": [22, 23], "By": [22, 23, 28, 44, 47], "second": [22, 23, 26, 28, 43, 49], "after": [22, 23, 28, 46], "customari": [22, 23, 28], "distinguish": [22, 23, 28], "unlik": [22, 23, 28], "In": [22, 23, 28, 33, 34, 35, 39, 40, 41, 43, 44, 45, 46, 47, 49], "while": [24, 49], "unwrap_dist": [24, 26, 37], "dist": [24, 26, 37], "unwrap": [24, 26, 37], "_tensorcoerc": [24, 26, 37], "f_mean": [24, 43, 44, 45, 47, 49], "f_var": [24, 43, 44, 45, 47, 49], "y_mean": [24, 41, 48], "y_var": [24, 41, 48], "encapsul": [24, 34, 41, 47], "tensormetaclass": 24, "behav": 24, "track": [25, 46, 47], "adapt": [26, 39, 45], "probabl": [26, 30, 31, 49], "contrast": 26, "overal": 26, "your": [26, 42, 43, 44, 45, 46, 47, 48, 49], "y_true": 26, "f_predict": 26, "interfac": 26, "rather": [26, 49], "y_pred": 26, "compute_a_inv_b": [27, 35], "explicit": [27, 30, 31, 35], "invers": [27, 35], "often": [27, 35], "stabl": [27, 35, 47], "posit": [27, 35], "definit": [27, 35], "lead": [27, 35, 39, 43], "long": [27, 35], "thei": [27, 35, 41, 44, 45], "deep_gp": [29, 44, 45], "modul": [29, 30, 33, 44, 46, 47, 48], "relat": 30, "natgradwrapp": [30, 31], "naturalgradi": [30, 31, 48], "keras_natgrad": 30, "drop": [30, 31], "replac": [30, 31], "style": [30, 31, 45], "natgrad_lay": [30, 31, 48], "befor": [30, 31, 45], "natur": [30, 31, 41, 44, 49], "gradient": [30, 31], "one": [30, 31, 39, 41, 46, 47, 49], "natgrad": [30, 31, 48], "adam": [30, 31, 39, 41, 44, 45, 46, 47, 48], "getter": [30, 31], "setter": [30, 31], "select": [30, 31], "hack": [30, 31], "cope": [30, 31, 49], "reducelronplateau": [30, 31, 44, 45, 48], "learningrateschedul": [30, 31], "been": [30, 31, 44, 46, 47, 49], "hardcod": [30, 31], "train_step": [30, 31], "logic": [30, 31], "step": [30, 31, 48], "what": [30, 31, 47], "happen": [30, 31], "base_model": [30, 31], "futur": [30, 31, 39, 41, 49], "simpli": [30, 31], "runtim": 32, "kernel_with_feature_decomposit": [33, 35, 43, 49], "nonetyp": [33, 34, 35], "feature_funct": [33, 34, 35, 43, 49], "feature_coeffici": [33, 34, 35, 43, 49], "sum_": [33, 34, 35, 43, 44, 49], "l": [33, 34, 35, 41, 44, 48, 49], "lambda_i": [33, 34, 35, 44], "phi_i": [33, 34, 35, 44, 49], "cdot": [33, 34, 35, 43, 44, 49], "deriv": [33, 34, 35], "mercer": [33, 34, 35, 43, 49], "pair": [33, 34, 35], "eigenfunct": [33, 34, 35, 44], "eigenvalu": [33, 34, 35, 44], "some": [33, 34, 35, 41, 45, 47, 48], "left": [33, 34, 35, 41, 43], "hand": [33, 34, 35, 43], "side": [33, 34, 35], "unknown": [33, 34, 35, 44], "avail": [33, 34, 35, 42, 43, 44, 45, 46, 47, 48, 49], "close": [33, 34, 35, 43, 49], "solin": [33, 34, 35], "arno": [33, 34, 35], "simo": [33, 34, 35], "s\u00e4rkk\u00e4": [33, 34, 35], "hilbert": [33, 34, 35], "borovitskii": [33, 34, 35, 39], "viacheslav": [33, 34, 35, 39], "mat\u00e9rn": [33, 34, 35], "riemannian": [33, 34, 35], "manifold": [33, 34, 35], "advanc": [33, 34, 35, 39], "system": [33, 34, 35, 39], "ali": [33, 34, 35, 39], "benjamin": [33, 34, 35, 39], "vincent": [33, 34, 35, 39, 41], "nicola": [33, 34, 35, 39], "durrand": [33, 34, 35, 39], "jame": [33, 34, 35, 39], "hensman": [33, 34, 35, 39], "spheric": [33, 34, 35], "harmon": [33, 34, 35], "analyt": [33, 34, 35, 43], "express": [33, 34, 35, 43, 49], "infinit": [33, 34, 35, 49], "certain": [33, 34, 35, 43], "k_diag": [33, 34, 35], "infti": [34, 49], "_approximatekernel": 34, "x2": 34, "inner": 34, "product": 34, "draw_conditional_sampl": [35, 36], "f_old": [35, 36], "tild": [35, 36], "condit": [35, 36, 39, 41], "f_": [35, 36], "old": [35, 36], "joint": [35, 36], "f_new": [35, 36], "stack": [35, 36], "pmatrix": [35, 36, 43], "operatornam": [35, 36], "2x2": [35, 36], "block": [35, 36, 39, 41, 47, 49], "howev": [35, 43, 45, 47, 49], "rule": [35, 43], "matheron": [35, 43], "scheme": [35, 43], "__version__": 38, "research": [39, 49], "toolbox": 39, "dedic": 39, "dgp": [39, 40, 41, 44, 47, 48], "dl13": [39, 41, 47], "hierarch": [39, 46], "extens": 39, "feed": 39, "next": [39, 42], "mathemat": [39, 44], "vdwdj": [39, 47], "marri": 39, "power": [39, 40, 43, 45, 47], "api": [39, 47], "deploi": 39, "modern": [39, 50], "wai": [39, 43], "tool": [39, 44], "basic": [39, 47, 49], "comprehens": 39, "refer": [39, 43, 49], "quick": 39, "teaser": 39, "snippet": 39, "intro": 39, "demonstr": [39, 43, 45, 49], "linspac": [39, 41, 42, 44, 45, 46, 47, 48, 49], "min": [39, 41, 44, 45, 46, 47, 48], "max": [39, 41, 44, 45, 46, 47, 48], "reshap": [39, 41, 42, 44, 45, 46, 47, 48], "kernel1": [39, 42, 47], "inducing_variable1": [39, 47], "copi": [39, 42, 47, 48, 49], "gp_layer1": [39, 47], "kernel2": [39, 42, 47], "inducing_variable2": [39, 47], "gp_layer2": [39, 41, 47], "two_layer_dgp": [39, 47], "histori": [39, 41, 44, 45, 46, 47, 48], "1e3": [39, 41, 47], "produc": 39, "shown": [39, 43], "fig": [39, 41, 42, 43, 45, 46, 47, 49], "comparison": 39, "pip": 39, "python": [39, 41, 45], "7": [39, 41, 42, 43, 45, 46, 47, 48, 49], "onward": 39, "branch": 39, "repositori": [39, 45], "open": 39, "project": 39, "submit": 39, "pull": 39, "request": 39, "bug": 39, "report": [39, 40], "guidelin": 39, "public": [39, 47], "slack": 39, "workspac": 39, "pleas": 39, "invit": 39, "link": 39, "ask": 39, "short": 39, "question": 39, "involv": 39, "discuss": 39, "andrea": 39, "damian": 39, "neil": [39, 41], "lawrenc": [39, 41], "aussian": 39, "2013": 39, "hugh": 39, "marc": 39, "estim": [39, 44], "2018": [39, 41], "ldjd20": [39, 47], "felix": 39, "leibfri": 39, "st": 39, "john": 39, "arxiv": 39, "preprint": 39, "2012": 39, "13962": 39, "rw06": [39, 47], "ce": 39, "rasmussen": 39, "cki": 39, "william": 39, "mit": 39, "press": 39, "cambridg": 39, "ma": 39, "usa": 39, "januari": 39, "2006": 39, "doubli": 39, "stochast": [39, 47, 49], "2017": 39, "import": [39, 41, 42, 43, 44, 45, 46, 47, 48, 49], "2019": 39, "dougal": 39, "j": [39, 43], "sutherland": 39, "jeff": 39, "schneider": 39, "On": [39, 41, 43], "error": [39, 41], "ourier": 39, "thirti": 39, "uncertainti": [39, 44], "862": 39, "871": 39, "2015": 39, "mark": [39, 49], "van": 39, "der": 39, "wilk": 39, "artem": 39, "artemev": 39, "interdomain": 39, "2003": 39, "01115": 39, "alexand": 39, "terenin": 39, "peter": 39, "mostowski": 39, "xinnan": 39, "yu": 39, "ananda": 39, "theertha": 39, "suresh": 39, "krzysztof": 39, "choromanski": 39, "daniel": 39, "holtmann": 39, "rice": 39, "sanjiv": 39, "kumar": 39, "29": 39, "1975": 39, "1983": 39, "2016": 39, "gpflux": [40, 41, 42, 43, 44, 46, 48, 49, 50], "sever": [40, 43, 49], "uci": 40, "found": 40, "main": [40, 43], "py": [40, 41, 42, 44, 46, 47, 48], "json": [40, 45], "script": [40, 43], "aggreg": 40, "plot": [40, 42, 43, 44, 45, 46, 47, 48, 49], "outcom": [40, 49], "dev": 40, "mse": 40, "nlpd": 40, "measur": 40, "split": 40, "90": 40, "remain": [40, 43, 49], "10": [40, 41, 42, 43, 44, 46, 47, 48], "normalis": [40, 41, 45, 47], "unit": [40, 45, 46], "tabl": 40, "count": [40, 41, 46], "concret": 40, "103785": 40, "014586": 40, "526873": 40, "231547": 40, "093612": 40, "003917": 40, "388471": 40, "200387": 40, "103213": 40, "019258": 40, "624335": 40, "409077": 40, "energi": 40, "003866": 40, "001660": 40, "991852": 40, "065885": 40, "004071": 40, "001542": 40, "089672": 40, "039099": 40, "004063": 40, "001521": 40, "091651": 40, "039407": 40, "kin8mn": 40, "098581": 40, "006733": 40, "263775": 40, "019575": 40, "061714": 40, "002321": 40, "040491": 40, "026879": 40, "064156": 40, "002981": 40, "144311": 40, "045383": 40, "056407": 40, "004272": 40, "009102": 40, "045228": 40, "044380": 40, "006752": 40, "129386": 40, "078303": 40, "042464": 40, "005769": 40, "113741": 40, "040804": 40, "yacht": 40, "005899": 40, "005309": 40, "908563": 40, "095456": 40, "002389": 40, "002963": 40, "084093": 40, "071270": 40, "002420": 40, "002879": 40, "085658": 40, "069810": 40, "explor": 41, "heteroscedast": 41, "seen": [41, 49], "doesn": 41, "satisfactori": 41, "inspir": 41, "prof": 41, "talk": 41, "highli": 41, "recommend": 41, "watch": 41, "matplotlib": [41, 42, 43, 44, 45, 46, 47, 48, 49], "pyplot": [41, 42, 43, 44, 45, 46, 47, 48, 49], "plt": [41, 42, 43, 44, 45, 46, 47, 48, 49], "tqdm": 41, "tensorflow_prob": 41, "sklearn": 41, "neighbor": 41, "kerneldens": 41, "come": [41, 44], "motorcycl": 41, "accid": [41, 47], "simul": [41, 47], "interest": [41, 47, 49], "particular": [41, 49], "def": [41, 43, 45, 46, 47, 48, 49], "motorcycle_data": [41, 45, 47], "panda": [41, 45, 47], "pd": [41, 45, 47], "df": [41, 45, 47], "read_csv": [41, 45, 47], "motor": [41, 45, 47], "csv": [41, 45, 47], "index_col": [41, 45, 47], "accel": [41, 45, 47], "d_xim": 41, "x_margin": [41, 44, 45, 46], "y_margin": 41, "ax": [41, 42, 43, 45, 46, 47, 49], "subplot": [41, 42, 43, 45, 46, 47, 49], "scatter": 41, "marker": 41, "color": [41, 43, 45, 46, 47, 49], "set_ylim": [41, 45, 46, 47, 49], "set_xlim": [41, 49], "svgp": [41, 47, 49], "quit": 41, "poorli": 41, "shallow": [41, 47], "now": [41, 44, 46, 47], "single_layer_dgp": [41, 47], "set_xlabel": [41, 43, 45, 49], "set_ylabel": [41, 43, 45, 49], "warn": [41, 42, 43, 44, 45, 46, 47, 48, 49], "home": [41, 42, 44, 46, 47], "anaconda3": 41, "env": 41, "gpflow2": 41, "lib": [41, 45], "python3": 41, "site": 41, "packag": 41, "op": [41, 46], "linalg": [41, 43, 49], "linear_operator_diag": 41, "175": [41, 42, 46, 47], "linearoper": 41, "__init__": [41, 48], "linear_oper": 41, "graph_par": 41, "deprec": [41, 44, 46, 47, 48], "instruct": [41, 42, 43, 44, 45, 46, 47, 48, 49], "39": [41, 44, 45, 46, 47, 48], "num_data_test": 41, "200": [41, 42, 45, 48], "x_test": [41, 44, 45, 46, 47], "mu": [41, 43, 45, 47], "squeez": [41, 45, 46, 47, 48], "var": [41, 45, 46, 47], "upper": [41, 45, 46, 47], "fill_between": [41, 43, 45, 46, 47, 49], "c1": [41, 45, 46, 47], "alpha": [41, 43, 44, 45, 46, 47, 49], "kx": [41, 44, 45, 46, 47], "acc": 41, "errorbar": [41, 48], "overestim": 41, "bar": [41, 49], "right": [41, 43], "choos": [41, 43], "recognit": 41, "done": [41, 46], "w_dim": 41, "prior_mean": 41, "prior_std": 41, "lv": 41, "act": 41, "pseudo": 41, "carefulli": 41, "8": [41, 42, 43, 45, 47, 48, 49], "05": [41, 42, 48], "9": [41, 43, 44, 45, 47, 48], "assign": [41, 48], "print_summari": [41, 46], "fmt": [41, 46], "transform": [41, 46, 49], "trainabl": [41, 46], "_layer": 41, "parameterident": 41, "94": 41, "float64": [41, 44, 45, 46], "01673752e": 41, "02": [41, 44, 45], "parametersoftplu": 41, "float641": 41, "04166667": 41, "66191201": 41, "parameterfilltriangular": 41, "48779388": 41, "00": [41, 45], "varianceparametersoftplu": 41, "float640": [41, 46], "009999999999999998": 41, "directlyparameterizedencod": 41, "off": 41, "shuffl": 41, "17": 41, "005": 41, "20e3": 41, "batch_siz": [41, 44, 45, 48], "18": [41, 47], "_metric": [41, 46], "_non_trainable_weight": [41, 46], "resourcevari": [41, 46], "0780249257681602": 41, "03641934": 41, "softplu": [41, 46], "8204074": 41, "4804222860958632": 41, "8957803239319818": 41, "13181667": 41, "24491404": 41, "10892382": 41, "15883231": 41, "44379760e": 41, "filltriangular": [41, 46], "69748551e": 41, "00000000e": 41, "14355680909786334": 41, "10763915659754926": 41, "7436233151733747": 41, "28383233e": 41, "25372763": 41, "55995241e": 41, "varianceparamet": 41, "19": [41, 46], "predict_y_sampl": 41, "prediction_model": [41, 45], "25": [41, 43, 45], "append": [41, 42, 43, 49], "concat": 41, "plot_sampl": 41, "n_sampl": 41, "xs_tile": 41, "tile": 41, "flatten": 41, "c0": [41, 44], "plot_latent_vari": 41, "isinst": 41, "yerr": 41, "o": [41, 43, 49], "ax1": [41, 45], "ax2": [41, 45], "figsiz": [41, 42, 43, 45, 49], "100": [41, 43, 44, 45, 46, 47, 48], "lt": [41, 45, 46, 47], "24": [41, 49], "88it": 41, "23": 41, "plot_mean_and_var": 41, "5_000": 41, "acceler": [41, 45, 47], "5000": 41, "03": [41, 45, 46, 47], "44it": 41, "sharp": 41, "ish": 41, "transit": 41, "silverman": [41, 47], "1985": [41, 47], "aspect": [41, 47, 49], "spline": [41, 47], "smooth": [41, 47, 49], "curv": [41, 43, 47], "journal": [41, 47], "royal": [41, 47], "societi": [41, 47], "seri": [41, 47], "47": [41, 47], "52": [41, 47], "develop": 42, "intuit": 42, "plot_lay": 42, "set_se": 42, "42": 42, "2024": [42, 43, 44, 45, 46, 47, 48, 49], "06": [42, 43, 44, 45, 46, 47, 48, 49], "12": [42, 43, 44, 45, 46, 47, 48, 49], "022488": 42, "tsl": [42, 43, 44, 45, 46, 47, 48, 49], "cuda": [42, 43, 44, 45, 46, 47, 48, 49], "cudart_stub": [42, 43, 44, 45, 46, 47, 48, 49], "cc": [42, 43, 44, 45, 46, 47, 48, 49], "28": [42, 43, 44, 45, 46, 47, 48, 49], "find": [42, 43, 44, 45, 46, 47, 48, 49], "driver": [42, 43, 44, 45, 46, 47, 48, 49], "gpu": [42, 43, 44, 45, 46, 47, 48, 49], "053090": 42, "053869": 42, "platform": [42, 43, 44, 45, 46, 47, 48, 49], "cpu_feature_guard": [42, 43, 44, 45, 46, 47, 48, 49], "182": [42, 43, 44, 45, 46, 47, 48, 49], "binari": [42, 43, 44, 45, 46, 47, 48, 49], "cpu": [42, 43, 44, 45, 46, 47, 48, 49], "critic": [42, 43, 44, 45, 46, 47, 48, 49], "avx2": [42, 43, 44, 45, 46, 47, 48, 49], "fma": [42, 43, 44, 45, 46, 47, 48, 49], "rebuild": [42, 43, 44, 45, 46, 47, 48, 49], "flag": [42, 43, 44, 45, 46, 47, 48, 49], "759201": 42, "tf2tensorrt": [42, 43, 44, 45, 46, 47, 48, 49], "py_util": [42, 43, 44, 45, 46, 47, 48, 49], "38": [42, 43, 44, 45, 46, 47, 48, 49], "trt": [42, 43, 44, 45, 46, 47, 48, 49], "tensorrt": [42, 43, 44, 45, 46, 47, 48, 49], "give": 42, "inducing_var1": 42, "15": [42, 43], "layer1": [42, 48], "inducing_var2": 42, "layer2": [42, 48], "inducing_var3": 42, "kernel3": 42, "layer3": 42, "runner": [42, 44, 46, 47], "userwarn": [42, 44, 46, 47], "bewar": [42, 46, 47], "wa": [42, 44, 46, 47, 48], "layer_output": 42, "transpos": [42, 43], "go": [42, 43, 45, 46, 47], "bottom": 42, "33": 42, "aim": [43, 49], "figur": [43, 48, 49], "problem": [43, 49], "naiv": 43, "star": [43, 49], "formal": 43, "textbf": [43, 49], "accomplish": 43, "via": [43, 49], "chol": 43, "assumpt": [43, 44, 49], "real": 43, "label": [43, 48, 49], "x_n": [43, 49], "y_n": [43, 49], "univari": [43, 49], "sigma_": [43, 49], "epsilon": [43, 49], "star_": 43, "notat": [43, 49], "conveni": 43, "cross": 43, "matric": 43, "prime": [43, 44, 49], "denot": 43, "vectoris": 43, "jointli": 43, "allevi": [43, 49], "phi_d": 43, "approx": [43, 49], "view": [43, 44, 45, 49], "interc": [43, 49], "quantiti": 43, "exact": [43, 49], "linearli": 43, "decompos": 43, "mani": [43, 47, 49], "order": 43, "area": [43, 49], "relev": [43, 49], "extrapol": [43, 49], "reproduc": 43, "anoth": 43, "remedi": 43, "propos": [43, 44], "hybrid": [43, 50], "fashion": 43, "better": [43, 47], "accuraci": 43, "compar": [43, 46, 49], "formula": 43, "subsequ": [43, 44], "qualit": 43, "wasserstein": 43, "distanc": [43, 49], "conduct": 43, "accord": [43, 49], "neurip": [43, 49], "rcparam": [43, 49], "rc": [43, 49], "font": [43, 49], "rbf": [43, 49], "matern52": [43, 44, 49], "gpr": [43, 49], "13": [43, 48], "099699": 43, "130375": 43, "131371": 43, "818277": 43, "individu": 43, "eventu": 43, "domain": [43, 49], "increas": [43, 49], "log_": 43, "orang": [43, 49], "blue": 43, "fix": [43, 49], "noise_vari": [43, 49], "num_test_sampl": 43, "64": 43, "1024": [43, 49], "paper": 43, "num_experiment_run": 43, "repetit": 43, "vari": 43, "num_input_dimens": 43, "train_sample_expon": 43, "num_train_sampl": 43, "num_featur": 43, "4096": 43, "16384": 43, "actual": [43, 49], "below": [43, 49], "compute_analytic_gp_predict": 43, "x_star": [43, 49], "identifi": [43, 49], "param": 43, "free": 43, "gpr_model": [43, 49], "assert": 43, "explain": [43, 49], "compute_hybrid_rule_predict": 43, "exact_kernel": 43, "approximate_kernel": 43, "phi_star": 43, "_feature_funct": 43, "kxstarx": 43, "kxx": [43, 49], "kxx_plus_noise_var": [43, 49], "set_diag": 43, "diag_part": 43, "kxx_inv_mul_phi": 43, "solv": 43, "kxx_inv_mul_i": 43, "f_var_sqrt": 43, "decad": 43, "logarithm": 43, "_2": 43, "d_": 43, "trace": 43, "l_2": 43, "norm": 43, "log10_wasserstein_dist": 43, "approximate_mean": 43, "approximate_covari": 43, "robust": [43, 44], "squared_mean_dist": 43, "square_root_covari": 43, "sqrtm": 43, "ey": [43, 49], "matrix_product": 43, "square_root_matrix_product": 43, "ws_distanc": 43, "log10_ws_dist": 43, "conduct_experi": 43, "log10": 43, "wassertein": 43, "adjust": 43, "dim": 43, "random_sampl": 43, "uniform": [43, 49], "low": [43, 44], "85": 43, "lxx": [43, 49], "matmul": [43, 49], "lie": 43, "interv": [43, 44, 49], "partial": 43, "overlap": 43, "f_mean_exact": 43, "f_var_exact": 43, "f_mean_weight": 43, "f_var_weight": 43, "f_mean_hybrid": 43, "f_var_hybrid": 43, "solut": 43, "log10_ws_dist_weight": 43, "log10_ws_dist_hybrid": 43, "repeat": [43, 47], "quartil": 43, "conduct_experiment_for_multiple_run": 43, "list_of_log10_ws_dist_weight": 43, "list_of_log10_ws_dist_hybrid": 43, "log10_ws_dist_weight_quart": 43, "quantil": 43, "75": 43, "log10_ws_dist_hybrid_quart": 43, "sinc": 43, "conduct_experiment_for_different_train_data_s": 43, "list_log10_ws_dist_weight_quart": 43, "list_log10_ws_dist_hybrid_quart": 43, "nt": 43, "print": 43, "num": [43, 49], "conduct_experiment_for_different_num_featur": 43, "list_of_weight_result": 43, "list_of_hybrid_result": 43, "nf": 43, "weight_result": 43, "hybrid_result": 43, "arriv": 43, "loop": [43, 49], "set_titl": [43, 49], "set_xscal": 43, "bisqu": 43, "peru": 43, "linewidth": [43, 49], "lightblu": 43, "darkblu": 43, "256": 43, "There": [43, 49], "exeri": 43, "dark": 43, "colour": [43, 49], "fewer": [43, 49], "lighter": 43, "decreas": [43, 49], "qualiti": [43, 49], "effect": [43, 49], "higher": 43, "maintain": 43, "eleg": 44, "overfit": 44, "incorpor": 44, "calibr": 44, "candid": 44, "scarc": 44, "noisi": 44, "applic": 44, "optimis": [44, 45, 49], "bo": 44, "despit": 44, "favor": 44, "still": 44, "practic": 44, "limit": [44, 49], "One": 44, "quickli": 44, "becom": [44, 49], "prohibit": 44, "grow": [44, 49], "known": [44, 45, 49], "bottleneck": 44, "thompson": 44, "recent": 44, "encourag": 44, "regim": 44, "unlock": 44, "group": 44, "sample_dgp": 44, "816227": 44, "847136": 44, "848104": 44, "584891": 44, "snelson1d": [44, 46, 48], "npz": [44, 46, 48], "cutoff": 44, "astyp": 44, "num_rff": 44, "1000": [44, 48, 49], "kernel_with_featur": 44, "noqa": 44, "e231": 44, "198": [44, 46, 47], "verifi": [44, 46, 47], "advis": [44, 46, 47], "construct_": [44, 46, 47], "tmp": [44, 46, 47, 48], "ipykernel_2758": 44, "1062847873": 44, "deprecationwarn": [44, 46, 47, 48], "tf2": [44, 46, 47, 48], "collect": [44, 45, 46, 47, 48], "nativ": [44, 46, 47, 48], "anymor": [44, 46, 47, 48], "learning_r": [44, 45, 48], "patienc": [44, 45, 48], "95": [44, 45, 48], "min_lr": [44, 45, 48], "n_x": 44, "f_scale": 44, "n_sim": 44, "f_sampl": [44, 49], "xlim": 44, "ylim": 44, "box": 45, "cours": 45, "rate": 45, "get_logg": [45, 47], "setlevel": [45, 47], "info": [45, 47], "50": 45, "850470": 45, "882551": 45, "883243": 45, "51": 45, "633163": 45, "xlabel": [45, 47], "ylabel": [45, 47], "focuss": 45, "predefin": [45, 49], "care": 45, "minibatch": [45, 47], "modifi": 45, "instanti": 45, "training_model": 45, "procedur": 45, "plateau": 45, "modelcheckpoint": 45, "filepath": 45, "ckpt": 45, "save_weights_onli": 45, "fail": 45, "serial": 45, "ignor": 45, "cannot": [45, 49], "pickl": 45, "34": 45, "gp_0": 45, "56": 45, "236347": 45, "profil": 45, "profiler_sess": 45, "104": 45, "session": 45, "236375": 45, "119": 45, "236802": 45, "131": 45, "tear": 45, "270366": 45, "270394": 45, "274677": 45, "70": 45, "276101": 45, "276350": 45, "rpc": 45, "client": 45, "save_profil": 45, "144": 45, "xspace": 45, "plugin": 45, "2024_06_20_12_03_00": 45, "fv": 45, "az1113": 45, "528": 45, "xplane": 45, "pb": 45, "lr": [45, 48], "insight": 45, "handi": 45, "thing": 45, "don": 45, "command": 45, "line": [45, 46, 47, 49], "logdir": 45, "n_test": [45, 46, 47], "reload": 45, "afterward": 45, "save_weight": 45, "prediction_model_new": 45, "load_weight": 45, "checkpointloadstatu": 45, "0x7fd9e251de80": 45, "gt": [45, 46, 47], "inde": 45, "plain": 46, "766046": 46, "796569": 46, "797555": 46, "537409": 46, "easi": [46, 47, 48], "usual": 46, "relu": 46, "utilis": 46, "interpret": [46, 49], "warp": 46, "likelihood_contain": 46, "discov": 46, "ipykernel_2997": 46, "2725319331": 46, "trajectori": 46, "hist": 46, "500": 46, "line2d": [46, 47], "0x7f54be7cdd00": 46, "inspect": [46, 47], "f_distribut": 46, "_self_tracked_track": 46, "_trainable_weight": 46, "unliftedinitializervari": 46, "float32": 46, "19218217": 46, "13338092": 46, "0139208": 46, "03010563": 46, "01673081": 46, "12579736": 46, "13662289": 46, "77549344": 46, "7601752": 46, "12514251": 46, "04522482": 46, "08523437": 46, "5161063": 46, "10624776": 46, "66325536": 46, "55": 46, "89333245": 46, "28838355": 46, "25918222": 46, "26320830053171324": 46, "float648": 46, "8161940601106827": 46, "9339522156896336": 46, "53848": 46, "33280035": 46, "_output_lay": 46, "_output_coordin": 46, "09509551770450522": 46, "cover": 47, "reader": 47, "familiar": 47, "concept": 47, "37": 47, "400185": 47, "432707": 47, "433369": 47, "225684": 47, "crash": 47, "helmet": 47, "showcas": 47, "oppos": 47, "ll": 47, "notic": 47, "reli": 47, "lot": [47, 49], "consciou": 47, "decis": 47, "lean": 47, "focus": 47, "respons": 47, "deal": 47, "softmax": 47, "robustmax": 47, "bernoulli": 47, "ipykernel_3118": 47, "153007595": 47, "specialis": 47, "ve": 47, "few": [47, 49], "predict_i": 47, "hope": 47, "familiaris": 47, "themselv": 47, "0x7f6b4c760280": 47, "visualis": [47, 49], "clearli": 47, "troubl": 47, "exercis": 47, "setup": 47, "similar": 47, "apart": 47, "fact": 47, "1737179024": 47, "0x7f6b4c259730": 47, "11": [47, 48], "visual": 47, "immedi": 47, "much": 47, "todo": 48, "reduce_in_test": 48, "04": [48, 49], "988604": 48, "020773": 48, "021436": 48, "790191": 48, "inlin": 48, "load": 48, "create_lay": 48, "hidden_dim": 48, "layer_typ": 48, "create_model": 48, "constructor": 48, "num_epoch": 48, "dgp_train": 48, "ipykernel_3293": 48, "2200924875": 48, "1m": 48, "5137": 48, "gp_layer_prior_kl": 48, "1376": 48, "gp_layer_1_prior_kl": 48, "0946": 48, "7143": 48, "1247": 48, "0732": 48, "dgp_natgrad": 48, "dgp_natgrad_train": 48, "insid": [48, 49], "gamma": 48, "history_natgrad": 48, "execut": [48, 49], "backward": 48, "9386": 48, "gp_layer_2_prior_kl": 48, "2665": 48, "gp_layer_3_prior_kl": 48, "0244": 48, "4184": 48, "2656": 48, "0344": 48, "dgp_test": 48, "re": 48, "increasingli": 49, "difficult": 49, "far": 49, "awai": 49, "outsid": 49, "less": 49, "reliabl": 49, "exactli": 49, "scope": 49, "emphasi": 49, "idea": 49, "theta_i": 49, "tau_i": 49, "randomli": 49, "unnormalis": 49, "drew": 49, "rightarrow": 49, "recov": 49, "perfectli": 49, "supervis": 49, "prod_": 49, "boldfac": 49, "up": 49, "enjoi": 49, "readili": 49, "x_": 49, "advantag": 49, "priori": 49, "know": 49, "latter": 49, "therefor": 49, "potenti": 49, "reinforc": 49, "wsa": 49, "proper": 49, "ingredi": 49, "gpf": 49, "060027": 49, "092095": 49, "092795": 49, "834054": 49, "six": 49, "experiment": 49, "x_interv": 49, "14": 49, "live": 49, "number_of_featur": 49, "2000": 49, "number_of_test_sampl": 49, "number_of_function_sampl": 49, "number_of_train_sampl": 49, "number_of_inducing_point": 49, "x_lim": 49, "y_lim": 49, "proce": 49, "ground": 49, "truth": 49, "1st": 49, "2nd": 49, "stop": 49, "corrupt": 49, "frame": 49, "col": 49, "3rd": 49, "titl": 49, "vertic": 49, "vline": 49, "ymin": 49, "ymax": 49, "lightgrei": 49, "fill": 49, "grai": 49, "predict_f_sampl": 49, "f_mean_plus_2std": 49, "f_mean_minus_2std": 49, "linestyl": 49, "black": 49, "column": 49, "green": 49, "svgp_model": 49, "optimize_model_with_scipi": 49, "scipi": 49, "training_loss_closur": 49, "trainable_vari": 49, "bfg": 49, "disp": 49, "maxit": 49, "10000": 49, "purpl": 49, "mfc": 49, "markeredgewidth": 49, "third": 49, "tight_layout": 49, "depict": 49, "grei": 49, "dash": 49, "solid": 49, "thick": 49, "circl": 49, "drastic": 49, "matern": 49, "smoother": 49, "promin": 49, "clear": 49, "introduct": 50, "why": 50}, "objects": {"": [[12, 0, 0, "-", "gpflux"]], "gpflux": [[3, 0, 0, "-", "architectures"], [4, 0, 0, "-", "callbacks"], [6, 0, 0, "-", "encoders"], [7, 0, 0, "-", "exceptions"], [9, 0, 0, "-", "experiment_support"], [11, 0, 0, "-", "helpers"], [22, 0, 0, "-", "layers"], [26, 0, 0, "-", "losses"], [27, 0, 0, "-", "math"], [29, 0, 0, "-", "models"], [30, 0, 0, "-", "optimization"], [32, 0, 0, "-", "runtime_checks"], [33, 0, 0, "-", "sampling"], [37, 0, 0, "-", "types"], [38, 0, 0, "-", "version"]], "gpflux.architectures": [[3, 1, 1, "", "Config"], [3, 3, 1, "", "build_constant_input_dim_deep_gp"], [2, 0, 0, "-", "constant_input_dim_deep_gp"]], "gpflux.architectures.Config": [[3, 2, 1, "", "inner_layer_qsqrt_factor"], [3, 2, 1, "", "likelihood_noise_variance"], [3, 2, 1, "", "num_inducing"], [3, 2, 1, "", "whiten"]], "gpflux.architectures.constant_input_dim_deep_gp": [[2, 1, 1, "", "Config"], [2, 1, 1, "", "DeepGP"], [2, 1, 1, "", "GPLayer"], [2, 1, 1, "", "LikelihoodLayer"], [2, 3, 1, "", "_construct_kernel"], [2, 3, 1, "", "build_constant_input_dim_deep_gp"], [2, 3, 1, "", "construct_basic_inducing_variables"], [2, 3, 1, "", "construct_basic_kernel"], [2, 3, 1, "", "construct_mean_function"]], "gpflux.architectures.constant_input_dim_deep_gp.Config": [[2, 2, 1, "", "inner_layer_qsqrt_factor"], [2, 2, 1, "", "likelihood_noise_variance"], [2, 2, 1, "", "num_inducing"], [2, 2, 1, "", "whiten"]], "gpflux.architectures.constant_input_dim_deep_gp.DeepGP": [[2, 4, 1, "", "_evaluate_deep_gp"], [2, 4, 1, "", "_evaluate_likelihood"], [2, 4, 1, "", "_validate_dtype"], [2, 4, 1, "", "_validate_num_data"], [2, 4, 1, "", "as_prediction_model"], [2, 4, 1, "", "as_training_model"], [2, 2, 1, "", "default_model_class"], [2, 4, 1, "", "elbo"], [2, 2, 1, "", "f_layers"], [2, 2, 1, "", "likelihood_layer"], [2, 2, 1, "", "num_data"], [2, 4, 1, "", "predict_f"]], "gpflux.architectures.constant_input_dim_deep_gp.GPLayer": [[2, 4, 1, "", "_convert_to_tensor_fn"], [2, 4, 1, "", "_make_distribution_fn"], [2, 4, 1, "", "call"], [2, 2, 1, "", "full_cov"], [2, 2, 1, "", "full_output_cov"], [2, 2, 1, "", "num_data"], [2, 2, 1, "", "num_samples"], [2, 4, 1, "", "predict"], [2, 4, 1, "", "prior_kl"], [2, 2, 1, "", "q_mu"], [2, 2, 1, "", "q_sqrt"], [2, 4, 1, "", "sample"], [2, 2, 1, "", "whiten"]], "gpflux.architectures.constant_input_dim_deep_gp.LikelihoodLayer": [[2, 4, 1, "", "call"]], "gpflux.callbacks": [[4, 1, 1, "", "TensorBoard"]], "gpflux.callbacks.TensorBoard": [[4, 2, 1, "", "keywords_to_monitor"], [4, 2, 1, "", "log_dir"], [4, 4, 1, "", "on_epoch_end"], [4, 4, 1, "", "on_train_batch_end"], [4, 4, 1, "", "set_model"], [4, 2, 1, "", "update_freq"]], "gpflux.encoders": [[6, 1, 1, "", "DirectlyParameterizedNormalDiag"], [5, 0, 0, "-", "directly_parameterized_encoder"]], "gpflux.encoders.DirectlyParameterizedNormalDiag": [[6, 4, 1, "", "call"], [6, 2, 1, "", "means"], [6, 2, 1, "", "stds"]], "gpflux.encoders.directly_parameterized_encoder": [[5, 1, 1, "", "DirectlyParameterizedNormalDiag"], [5, 5, 1, "", "EncoderInitializationError"], [5, 1, 1, "", "TrackableLayer"]], "gpflux.encoders.directly_parameterized_encoder.DirectlyParameterizedNormalDiag": [[5, 4, 1, "", "call"], [5, 2, 1, "", "means"], [5, 2, 1, "", "stds"]], "gpflux.exceptions": [[7, 5, 1, "", "EncoderInitializationError"], [7, 5, 1, "", "GPLayerIncompatibilityException"]], "gpflux.experiment_support": [[8, 0, 0, "-", "ci_utils"], [10, 0, 0, "-", "tensorboard"]], "gpflux.experiment_support.ci_utils": [[8, 3, 1, "", "is_continuous_integration"], [8, 3, 1, "", "notebook_list"], [8, 3, 1, "", "notebook_niter"], [8, 3, 1, "", "notebook_range"]], "gpflux.experiment_support.tensorboard": [[10, 1, 1, "", "Event"], [10, 3, 1, "", "tensorboard_event_iterator"]], "gpflux.helpers": [[11, 1, 1, "", "GPLayer"], [11, 3, 1, "", "construct_basic_inducing_variables"], [11, 3, 1, "", "construct_basic_kernel"], [11, 3, 1, "", "construct_gp_layer"], [11, 3, 1, "", "construct_mean_function"], [11, 3, 1, "", "make_dataclass_from_class"], [11, 3, 1, "", "xavier_initialization_numpy"]], "gpflux.helpers.GPLayer": [[11, 4, 1, "", "_convert_to_tensor_fn"], [11, 4, 1, "", "_make_distribution_fn"], [11, 4, 1, "", "call"], [11, 2, 1, "", "full_cov"], [11, 2, 1, "", "full_output_cov"], [11, 2, 1, "", "num_data"], [11, 2, 1, "", "num_samples"], [11, 4, 1, "", "predict"], [11, 4, 1, "", "prior_kl"], [11, 2, 1, "", "q_mu"], [11, 2, 1, "", "q_sqrt"], [11, 4, 1, "", "sample"], [11, 2, 1, "", "whiten"]], "gpflux.layers": [[22, 1, 1, "", "BayesianDenseLayer"], [22, 1, 1, "", "GPLayer"], [22, 1, 1, "", "LatentVariableLayer"], [22, 1, 1, "", "LayerWithObservations"], [22, 1, 1, "", "LikelihoodLayer"], [22, 1, 1, "", "TrackableLayer"], [19, 0, 0, "-", "basis_functions"], [20, 0, 0, "-", "bayesian_dense_layer"], [21, 0, 0, "-", "gp_layer"], [23, 0, 0, "-", "latent_variable_layer"], [24, 0, 0, "-", "likelihood_layer"], [25, 0, 0, "-", "trackable_layer"]], "gpflux.layers.BayesianDenseLayer": [[22, 4, 1, "", "build"], [22, 4, 1, "", "call"], [22, 4, 1, "", "predict_samples"], [22, 4, 1, "", "prior_kl"]], "gpflux.layers.GPLayer": [[22, 4, 1, "", "_convert_to_tensor_fn"], [22, 4, 1, "", "_make_distribution_fn"], [22, 4, 1, "", "call"], [22, 2, 1, "", "full_cov"], [22, 2, 1, "", "full_output_cov"], [22, 2, 1, "", "num_data"], [22, 2, 1, "", "num_samples"], [22, 4, 1, "", "predict"], [22, 4, 1, "", "prior_kl"], [22, 2, 1, "", "q_mu"], [22, 2, 1, "", "q_sqrt"], [22, 4, 1, "", "sample"], [22, 2, 1, "", "whiten"]], "gpflux.layers.LatentVariableLayer": [[22, 4, 1, "", "_inference_latent_samples_and_loss"], [22, 4, 1, "", "_inference_posteriors"], [22, 4, 1, "", "_local_kls"], [22, 4, 1, "", "_prediction_latent_samples"], [22, 4, 1, "", "call"], [22, 2, 1, "", "compositor"], [22, 2, 1, "", "encoder"], [22, 2, 1, "", "prior"]], "gpflux.layers.LayerWithObservations": [[22, 4, 1, "", "call"]], "gpflux.layers.LikelihoodLayer": [[22, 4, 1, "", "call"]], "gpflux.layers.basis_functions": [[14, 0, 0, "-", "fourier_features"]], "gpflux.layers.basis_functions.fourier_features": [[14, 1, 1, "", "OrthogonalRandomFeatures"], [14, 1, 1, "", "QuadratureFourierFeatures"], [14, 1, 1, "", "RandomFourierFeatures"], [14, 1, 1, "", "RandomFourierFeaturesCosine"], [13, 0, 0, "-", "base"], [16, 0, 0, "-", "quadrature"], [17, 0, 0, "-", "random"], [18, 0, 0, "-", "utils"]], "gpflux.layers.basis_functions.fourier_features.QuadratureFourierFeatures": [[14, 4, 1, "", "_compute_bases"], [14, 4, 1, "", "_compute_constant"], [14, 4, 1, "", "build"]], "gpflux.layers.basis_functions.fourier_features.RandomFourierFeatures": [[14, 4, 1, "", "_compute_bases"], [14, 4, 1, "", "_compute_constant"]], "gpflux.layers.basis_functions.fourier_features.RandomFourierFeaturesCosine": [[14, 4, 1, "", "_compute_bases"], [14, 4, 1, "", "_compute_constant"], [14, 4, 1, "", "build"]], "gpflux.layers.basis_functions.fourier_features.base": [[13, 1, 1, "", "FourierFeaturesBase"], [13, 6, 1, "", "ShapeType"]], "gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase": [[13, 4, 1, "", "_compute_bases"], [13, 4, 1, "", "_compute_constant"], [13, 4, 1, "", "call"], [13, 4, 1, "", "compute_output_shape"], [13, 4, 1, "", "get_config"]], "gpflux.layers.basis_functions.fourier_features.quadrature": [[16, 1, 1, "", "QuadratureFourierFeatures"], [15, 0, 0, "-", "gaussian"]], "gpflux.layers.basis_functions.fourier_features.quadrature.QuadratureFourierFeatures": [[16, 4, 1, "", "_compute_bases"], [16, 4, 1, "", "_compute_constant"], [16, 4, 1, "", "build"]], "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian": [[15, 1, 1, "", "FourierFeaturesBase"], [15, 1, 1, "", "QuadratureFourierFeatures"], [15, 6, 1, "", "ShapeType"], [15, 3, 1, "", "_bases_concat"]], "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.FourierFeaturesBase": [[15, 4, 1, "", "_compute_bases"], [15, 4, 1, "", "_compute_constant"], [15, 4, 1, "", "call"], [15, 4, 1, "", "compute_output_shape"], [15, 4, 1, "", "get_config"]], "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.QuadratureFourierFeatures": [[15, 4, 1, "", "_compute_bases"], [15, 4, 1, "", "_compute_constant"], [15, 4, 1, "", "build"]], "gpflux.layers.basis_functions.fourier_features.random": [[17, 1, 1, "", "OrthogonalRandomFeatures"], [17, 1, 1, "", "RandomFourierFeatures"], [17, 1, 1, "", "RandomFourierFeaturesCosine"]], "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeatures": [[17, 4, 1, "", "_compute_bases"], [17, 4, 1, "", "_compute_constant"]], "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeaturesCosine": [[17, 4, 1, "", "_compute_bases"], [17, 4, 1, "", "_compute_constant"], [17, 4, 1, "", "build"]], "gpflux.layers.basis_functions.fourier_features.utils": [[18, 3, 1, "", "_bases_concat"], [18, 3, 1, "", "_bases_cosine"]], "gpflux.layers.bayesian_dense_layer": [[20, 1, 1, "", "BayesianDenseLayer"], [20, 6, 1, "", "ShapeType"], [20, 1, 1, "", "TrackableLayer"], [20, 3, 1, "", "xavier_initialization_numpy"]], "gpflux.layers.bayesian_dense_layer.BayesianDenseLayer": [[20, 4, 1, "", "build"], [20, 4, 1, "", "call"], [20, 4, 1, "", "predict_samples"], [20, 4, 1, "", "prior_kl"]], "gpflux.layers.gp_layer": [[21, 1, 1, "", "GPLayer"], [21, 5, 1, "", "GPLayerIncompatibilityException"], [21, 1, 1, "", "Sample"], [21, 3, 1, "", "_cholesky_with_jitter"], [21, 6, 1, "", "efficient_sample"], [21, 3, 1, "", "verify_compatibility"]], "gpflux.layers.gp_layer.GPLayer": [[21, 4, 1, "", "_convert_to_tensor_fn"], [21, 4, 1, "", "_make_distribution_fn"], [21, 4, 1, "", "call"], [21, 2, 1, "", "full_cov"], [21, 2, 1, "", "full_output_cov"], [21, 2, 1, "", "num_data"], [21, 2, 1, "", "num_samples"], [21, 4, 1, "", "predict"], [21, 4, 1, "", "prior_kl"], [21, 2, 1, "", "q_mu"], [21, 2, 1, "", "q_sqrt"], [21, 4, 1, "", "sample"], [21, 2, 1, "", "whiten"]], "gpflux.layers.gp_layer.Sample": [[21, 4, 1, "", "__add__"], [21, 4, 1, "", "__call__"]], "gpflux.layers.latent_variable_layer": [[23, 1, 1, "", "LatentVariableLayer"], [23, 1, 1, "", "LayerWithObservations"], [23, 6, 1, "", "ObservationType"], [23, 1, 1, "", "TrackableLayer"]], "gpflux.layers.latent_variable_layer.LatentVariableLayer": [[23, 4, 1, "", "_inference_latent_samples_and_loss"], [23, 4, 1, "", "_inference_posteriors"], [23, 4, 1, "", "_local_kls"], [23, 4, 1, "", "_prediction_latent_samples"], [23, 4, 1, "", "call"], [23, 2, 1, "", "compositor"], [23, 2, 1, "", "encoder"], [23, 2, 1, "", "prior"]], "gpflux.layers.latent_variable_layer.LayerWithObservations": [[23, 4, 1, "", "call"]], "gpflux.layers.likelihood_layer": [[24, 1, 1, "", "LikelihoodLayer"], [24, 1, 1, "", "LikelihoodOutputs"], [24, 1, 1, "", "TrackableLayer"], [24, 3, 1, "", "unwrap_dist"]], "gpflux.layers.likelihood_layer.LikelihoodLayer": [[24, 4, 1, "", "call"]], "gpflux.layers.trackable_layer": [[25, 1, 1, "", "TrackableLayer"]], "gpflux.losses": [[26, 1, 1, "", "LikelihoodLoss"], [26, 3, 1, "", "unwrap_dist"]], "gpflux.losses.LikelihoodLoss": [[26, 4, 1, "", "call"]], "gpflux.math": [[27, 3, 1, "", "_cholesky_with_jitter"], [27, 3, 1, "", "compute_A_inv_b"]], "gpflux.models": [[29, 1, 1, "", "DeepGP"], [28, 0, 0, "-", "deep_gp"]], "gpflux.models.DeepGP": [[29, 4, 1, "", "_evaluate_deep_gp"], [29, 4, 1, "", "_evaluate_likelihood"], [29, 4, 1, "", "_validate_dtype"], [29, 4, 1, "", "_validate_num_data"], [29, 4, 1, "", "as_prediction_model"], [29, 4, 1, "", "as_training_model"], [29, 2, 1, "", "default_model_class"], [29, 4, 1, "", "elbo"], [29, 2, 1, "", "f_layers"], [29, 2, 1, "", "likelihood_layer"], [29, 2, 1, "", "num_data"], [29, 4, 1, "", "predict_f"]], "gpflux.models.deep_gp": [[28, 1, 1, "", "DeepGP"], [28, 1, 1, "", "LayerWithObservations"], [28, 1, 1, "", "LikelihoodLayer"], [28, 1, 1, "", "Sample"]], "gpflux.models.deep_gp.DeepGP": [[28, 4, 1, "", "_evaluate_deep_gp"], [28, 4, 1, "", "_evaluate_likelihood"], [28, 4, 1, "", "_validate_dtype"], [28, 4, 1, "", "_validate_num_data"], [28, 4, 1, "", "as_prediction_model"], [28, 4, 1, "", "as_training_model"], [28, 2, 1, "", "default_model_class"], [28, 4, 1, "", "elbo"], [28, 2, 1, "", "f_layers"], [28, 2, 1, "", "likelihood_layer"], [28, 2, 1, "", "num_data"], [28, 4, 1, "", "predict_f"]], "gpflux.models.deep_gp.LayerWithObservations": [[28, 4, 1, "", "call"]], "gpflux.models.deep_gp.LikelihoodLayer": [[28, 4, 1, "", "call"]], "gpflux.models.deep_gp.Sample": [[28, 4, 1, "", "__add__"], [28, 4, 1, "", "__call__"]], "gpflux.optimization": [[30, 1, 1, "", "NatGradModel"], [30, 1, 1, "", "NatGradWrapper"], [31, 0, 0, "-", "keras_natgrad"]], "gpflux.optimization.NatGradModel": [[30, 7, 1, "", "natgrad_layers"], [30, 7, 1, "", "optimizer"], [30, 4, 1, "", "train_step"]], "gpflux.optimization.NatGradWrapper": [[30, 4, 1, "", "call"]], "gpflux.optimization.keras_natgrad": [[31, 1, 1, "", "NatGradModel"], [31, 1, 1, "", "NatGradWrapper"]], "gpflux.optimization.keras_natgrad.NatGradModel": [[31, 7, 1, "", "natgrad_layers"], [31, 7, 1, "", "optimizer"], [31, 4, 1, "", "train_step"]], "gpflux.optimization.keras_natgrad.NatGradWrapper": [[31, 4, 1, "", "call"]], "gpflux.runtime_checks": [[32, 5, 1, "", "GPLayerIncompatibilityException"], [32, 3, 1, "", "verify_compatibility"]], "gpflux.sampling": [[33, 1, 1, "", "KernelWithFeatureDecomposition"], [33, 6, 1, "", "efficient_sample"], [34, 0, 0, "-", "kernel_with_feature_decomposition"], [35, 0, 0, "-", "sample"], [36, 0, 0, "-", "utils"]], "gpflux.sampling.KernelWithFeatureDecomposition": [[33, 7, 1, "", "feature_coefficients"], [33, 7, 1, "", "feature_functions"]], "gpflux.sampling.kernel_with_feature_decomposition": [[34, 1, 1, "", "KernelWithFeatureDecomposition"], [34, 1, 1, "", "_ApproximateKernel"]], "gpflux.sampling.kernel_with_feature_decomposition.KernelWithFeatureDecomposition": [[34, 7, 1, "", "feature_coefficients"], [34, 7, 1, "", "feature_functions"]], "gpflux.sampling.kernel_with_feature_decomposition._ApproximateKernel": [[34, 4, 1, "", "K"], [34, 4, 1, "", "K_diag"]], "gpflux.sampling.sample": [[35, 1, 1, "", "KernelWithFeatureDecomposition"], [35, 1, 1, "", "Sample"], [35, 3, 1, "", "_efficient_sample_conditional_gaussian"], [35, 3, 1, "", "_efficient_sample_matheron_rule"], [35, 3, 1, "", "compute_A_inv_b"], [35, 3, 1, "", "draw_conditional_sample"], [35, 6, 1, "", "efficient_sample"]], "gpflux.sampling.sample.KernelWithFeatureDecomposition": [[35, 7, 1, "", "feature_coefficients"], [35, 7, 1, "", "feature_functions"]], "gpflux.sampling.sample.Sample": [[35, 4, 1, "", "__add__"], [35, 4, 1, "", "__call__"]], "gpflux.sampling.utils": [[36, 3, 1, "", "_cholesky_with_jitter"], [36, 3, 1, "", "draw_conditional_sample"]], "gpflux.types": [[37, 6, 1, "", "ObservationType"], [37, 6, 1, "", "ShapeType"], [37, 3, 1, "", "unwrap_dist"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:function", "4": "py:method", "5": "py:exception", "6": "py:data", "7": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"], "4": ["py", "method", "Python method"], "5": ["py", "exception", "Python exception"], "6": ["py", "data", "Python data"], "7": ["py", "property", "Python property"]}, "titleterms": {"gpflux": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 45, 47], "api": 1, "refer": [1, 47], "architectur": [2, 3], "constant_input_dim_deep_gp": 2, "modul": [2, 4, 5, 7, 8, 10, 11, 13, 15, 18, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37], "content": [2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "todo": [2, 11, 21, 22, 23, 24, 28, 30, 31], "submodul": [3, 6, 9, 12, 14, 16, 22, 29, 30, 33], "packag": [3, 6, 14, 16, 17, 22, 29, 30, 33], "callback": [4, 45], "encod": [5, 6], "directly_parameterized_encod": 5, "except": 7, "experiment_support": [8, 9, 10], "ci_util": 8, "tensorboard": 10, "helper": 11, "subpackag": [12, 14, 19, 22], "layer": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 41, 42, 44, 45, 46, 47], "basis_funct": [13, 14, 15, 16, 17, 18, 19], "fourier_featur": [13, 14, 15, 16, 17, 18], "base": 13, "quadratur": [15, 16], "gaussian": [15, 41, 43, 44, 47], "random": [17, 44, 49], "util": [18, 36], "bayesian_dense_lay": 20, "gp_layer": 21, "latent_variable_lay": 23, "likelihood_lay": 24, "trackable_lay": 25, "loss": 26, "math": 27, "model": [28, 29, 44, 45, 46], "deep_gp": 28, "optim": [30, 31], "keras_natgrad": 31, "runtime_check": 32, "sampl": [33, 34, 35, 36, 42, 43, 44, 50], "kernel_with_feature_decomposit": 34, "type": 37, "version": 38, "welcom": 39, "get": 39, "start": 39, "instal": 39, "latest": 39, "releas": 39, "from": 39, "pypi": 39, "develop": 39, "github": 39, "join": 39, "commun": 39, "bibliographi": 39, "benchmark": 40, "deep": [41, 42, 45, 46, 47], "process": [41, 43, 44, 47], "latent": 41, "variabl": 41, "load": [41, 44, 45, 46], "data": [41, 44], "standard": 41, "singl": [41, 44, 47], "spars": 41, "variat": 41, "gp": [41, 42, 44, 45, 46, 47], "first": 41, "second": 41, "fit": [41, 44], "predict": 41, "plot": 41, "code": 41, "conclus": 41, "construct": 42, "propag": 42, "through": 42, "visualis": 42, "effici": [43, 44], "posterior": 43, "fourier": [44, 49], "featur": [44, 49], "snelson": [44, 46], "dataset": [44, 45, 46, 47], "set": [44, 45], "up": [44, 45], "kernel": 44, "its": 44, "decomposit": 44, "build": 44, "train": [44, 45], "initialis": 44, "draw": 44, "why": 45, "i": 45, "modern": 45, "librari": 45, "motorcycl": [45, 47], "toi": 45, "one": 45, "dimension": 45, "two": [45, 47], "mini": 45, "batch": 45, "checkpoint": 45, "monitor": 45, "post": 45, "save": 45, "serv": 45, "hybrid": 46, "combin": 46, "neural": 46, "network": 46, "initi": 46, "sequenti": 46, "kera": [46, 48], "net": 46, "introduct": 47, "The": 47, "integr": 48, "weight": 49, "space": 49, "approxim": 49, "tutori": 50, "introductori": 50, "advanc": 50}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinxcontrib.bibtex": 9, "sphinx": 58}, "alltitles": {"gpflux": [[0, "module-gpflux"], [12, "module-gpflux"]], "API reference": [[1, "api-reference"]], "gpflux.architectures.constant_input_dim_deep_gp": [[2, "module-gpflux.architectures.constant_input_dim_deep_gp"]], "Module Contents": [[2, "module-contents"], [4, "module-contents"], [5, "module-contents"], [7, "module-contents"], [8, "module-contents"], [10, "module-contents"], [11, "module-contents"], [13, "module-contents"], [15, "module-contents"], [18, "module-contents"], [20, "module-contents"], [21, "module-contents"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-contents"], [27, "module-contents"], [28, "module-contents"], [31, "module-contents"], [32, "module-contents"], [34, "module-contents"], [35, "module-contents"], [36, "module-contents"], [37, "module-contents"]], "Todo": [[2, "id1"], [2, "id2"], [11, "id1"], [21, "id2"], [22, "id1"], [22, "id3"], [22, "id4"], [23, "id2"], [24, "id1"], [28, "id1"], [30, "id1"], [31, "id1"]], "gpflux.architectures": [[3, "module-gpflux.architectures"]], "Submodules": [[3, "submodules"], [6, "submodules"], [9, "submodules"], [12, "submodules"], [14, "submodules"], [16, "submodules"], [22, "submodules"], [29, "submodules"], [30, "submodules"], [33, "submodules"]], "Package Contents": [[3, "package-contents"], [6, "package-contents"], [14, "package-contents"], [16, "package-contents"], [17, "package-contents"], [22, "package-contents"], [29, "package-contents"], [30, "package-contents"], [33, "package-contents"]], "gpflux.callbacks": [[4, "module-gpflux.callbacks"]], "gpflux.encoders.directly_parameterized_encoder": [[5, "module-gpflux.encoders.directly_parameterized_encoder"]], "gpflux.encoders": [[6, "module-gpflux.encoders"]], "gpflux.exceptions": [[7, "module-gpflux.exceptions"]], "gpflux.experiment_support.ci_utils": [[8, "module-gpflux.experiment_support.ci_utils"]], "gpflux.experiment_support": [[9, "module-gpflux.experiment_support"]], "gpflux.experiment_support.tensorboard": [[10, "module-gpflux.experiment_support.tensorboard"]], "gpflux.helpers": [[11, "module-gpflux.helpers"]], "Subpackages": [[12, "subpackages"], [14, "subpackages"], [19, "subpackages"], [22, "subpackages"]], "gpflux.layers.basis_functions.fourier_features.base": [[13, "module-gpflux.layers.basis_functions.fourier_features.base"]], "gpflux.layers.basis_functions.fourier_features": [[14, "module-gpflux.layers.basis_functions.fourier_features"]], "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian": [[15, "module-gpflux.layers.basis_functions.fourier_features.quadrature.gaussian"]], "gpflux.layers.basis_functions.fourier_features.quadrature": [[16, "module-gpflux.layers.basis_functions.fourier_features.quadrature"]], "gpflux.layers.basis_functions.fourier_features.random": [[17, "module-gpflux.layers.basis_functions.fourier_features.random"]], "gpflux.layers.basis_functions.fourier_features.utils": [[18, "module-gpflux.layers.basis_functions.fourier_features.utils"]], "gpflux.layers.basis_functions": [[19, "module-gpflux.layers.basis_functions"]], "gpflux.layers.bayesian_dense_layer": [[20, "module-gpflux.layers.bayesian_dense_layer"]], "gpflux.layers.gp_layer": [[21, "module-gpflux.layers.gp_layer"]], "gpflux.layers": [[22, "module-gpflux.layers"]], "gpflux.layers.latent_variable_layer": [[23, "module-gpflux.layers.latent_variable_layer"]], "gpflux.layers.likelihood_layer": [[24, "module-gpflux.layers.likelihood_layer"]], "gpflux.layers.trackable_layer": [[25, "module-gpflux.layers.trackable_layer"]], "gpflux.losses": [[26, "module-gpflux.losses"]], "gpflux.math": [[27, "module-gpflux.math"]], "gpflux.models.deep_gp": [[28, "module-gpflux.models.deep_gp"]], "gpflux.models": [[29, "module-gpflux.models"]], "gpflux.optimization": [[30, "module-gpflux.optimization"]], "gpflux.optimization.keras_natgrad": [[31, "module-gpflux.optimization.keras_natgrad"]], "gpflux.runtime_checks": [[32, "module-gpflux.runtime_checks"]], "gpflux.sampling": [[33, "module-gpflux.sampling"]], "gpflux.sampling.kernel_with_feature_decomposition": [[34, "module-gpflux.sampling.kernel_with_feature_decomposition"]], "gpflux.sampling.sample": [[35, "module-gpflux.sampling.sample"]], "gpflux.sampling.utils": [[36, "module-gpflux.sampling.utils"]], "gpflux.types": [[37, "module-gpflux.types"]], "gpflux.version": [[38, "module-gpflux.version"]], "Welcome to GPflux": [[39, "welcome-to-gpflux"]], "Getting started": [[39, "getting-started"]], "Installation": [[39, "installation"]], "Latest release from PyPI": [[39, "latest-release-from-pypi"]], "Latest development release from GitHub": [[39, "latest-development-release-from-github"]], "Join the community": [[39, "join-the-community"]], "Bibliography": [[39, "bibliography"]], "Benchmarks": [[40, "Benchmarks"]], "Deep Gaussian processes with Latent Variables": [[41, "Deep-Gaussian-processes-with-Latent-Variables"]], "Load data": [[41, "Load-data"]], "Standard single layer Sparse Variational GP": [[41, "Standard-single-layer-Sparse-Variational-GP"]], "Latent Variable Layer": [[41, "Latent-Variable-Layer"]], "First GP layer": [[41, "First-GP-layer"]], "Second GP layer": [[41, "Second-GP-layer"]], "Fit": [[41, "Fit"]], "Prediction and plotting code": [[41, "Prediction-and-plotting-code"]], "Conclusion": [[41, "Conclusion"]], "Deep GP samples": [[42, "Deep-GP-samples"]], "Constructing the layers": [[42, "Constructing-the-layers"]], "Propagating samples through the layers": [[42, "Propagating-samples-through-the-layers"]], "Visualising samples": [[42, "Visualising-samples"]], "Efficient Posterior Gaussian Process Sampling": [[43, "Efficient-Posterior-Gaussian-Process-Sampling"]], "Efficient sampling with Gaussian processes and Random Fourier Features": [[44, "Efficient-sampling-with-Gaussian-processes-and-Random-Fourier-Features"]], "Load Snelson dataset": [[44, "Load-Snelson-dataset"], [46, "Load-Snelson-dataset"]], "Setting up the kernel and its feature decomposition": [[44, "Setting-up-the-kernel-and-its-feature-decomposition"]], "Building and training the single-layer GP": [[44, "Building-and-training-the-single-layer-GP"]], "Initialise the single-layer GP": [[44, "Initialise-the-single-layer-GP"]], "Fit model to data": [[44, "Fit-model-to-data"]], "Drawing samples": [[44, "Drawing-samples"]], "Why GPflux is a modern (deep) GP library": [[45, "Why-GPflux-is-a-modern-(deep)-GP-library"]], "Setting up the dataset and model": [[45, "Setting-up-the-dataset-and-model"]], "Motorcycle: a toy one-dimensional dataset": [[45, "Motorcycle:-a-toy-one-dimensional-dataset"]], "Two-layer deep GP": [[45, "Two-layer-deep-GP"]], "Training: mini-batching, callbacks, checkpoints and monitoring": [[45, "Training:-mini-batching,-callbacks,-checkpoints-and-monitoring"]], "Post-training: saving, loading, and serving the model": [[45, "Post-training:-saving,-loading,-and-serving-the-model"]], "Hybrid Deep GP models: combining GP and Neural Network layers": [[46, "Hybrid-Deep-GP-models:-combining-GP-and-Neural-Network-layers"]], "Initialize the GP Layer": [[46, "Initialize-the-GP-Layer"]], "Sequential Keras model with GP and Neural net layers": [[46, "Sequential-Keras-model-with-GP-and-Neural-net-layers"]], "Introduction to GPflux": [[47, "Introduction-to-GPflux"]], "The motorcycle dataset": [[47, "The-motorcycle-dataset"]], "Single-layer GP": [[47, "Single-layer-GP"]], "Two-layer deep Gaussian process": [[47, "Two-layer-deep-Gaussian-process"]], "References": [[47, "References"]], "Keras integration": [[48, "Keras-integration"]], "Weight Space Approximation with Random Fourier Features": [[49, "Weight-Space-Approximation-with-Random-Fourier-Features"]], "Tutorials": [[50, "tutorials"]], "Introductory": [[50, null]], "Advanced": [[50, null]], "Sampling": [[50, null]]}, "indexentries": {"gpflux": [[0, "module-gpflux"], [12, "module-gpflux"]], "module": [[0, "module-gpflux"], [2, "module-gpflux.architectures.constant_input_dim_deep_gp"], [3, "module-gpflux.architectures"], [4, "module-gpflux.callbacks"], [5, "module-gpflux.encoders.directly_parameterized_encoder"], [6, "module-gpflux.encoders"], [7, "module-gpflux.exceptions"], [8, "module-gpflux.experiment_support.ci_utils"], [9, "module-gpflux.experiment_support"], [10, "module-gpflux.experiment_support.tensorboard"], [11, "module-gpflux.helpers"], [12, "module-gpflux"], [13, "module-gpflux.layers.basis_functions.fourier_features.base"], [14, "module-gpflux.layers.basis_functions.fourier_features"], [15, "module-gpflux.layers.basis_functions.fourier_features.quadrature.gaussian"], [16, "module-gpflux.layers.basis_functions.fourier_features.quadrature"], [17, "module-gpflux.layers.basis_functions.fourier_features.random"], [18, "module-gpflux.layers.basis_functions.fourier_features.utils"], [19, "module-gpflux.layers.basis_functions"], [20, "module-gpflux.layers.bayesian_dense_layer"], [21, "module-gpflux.layers.gp_layer"], [22, "module-gpflux.layers"], [23, "module-gpflux.layers.latent_variable_layer"], [24, "module-gpflux.layers.likelihood_layer"], [25, "module-gpflux.layers.trackable_layer"], [26, "module-gpflux.losses"], [27, "module-gpflux.math"], [28, "module-gpflux.models.deep_gp"], [29, "module-gpflux.models"], [30, "module-gpflux.optimization"], [31, "module-gpflux.optimization.keras_natgrad"], [32, "module-gpflux.runtime_checks"], [33, "module-gpflux.sampling"], [34, "module-gpflux.sampling.kernel_with_feature_decomposition"], [35, "module-gpflux.sampling.sample"], [36, "module-gpflux.sampling.utils"], [37, "module-gpflux.types"], [38, "module-gpflux.version"]], "config (class in gpflux.architectures.constant_input_dim_deep_gp)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.Config"]], "deepgp (class in gpflux.architectures.constant_input_dim_deep_gp)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.DeepGP"]], "gplayer (class in gpflux.architectures.constant_input_dim_deep_gp)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.GPLayer"]], "likelihoodlayer (class in gpflux.architectures.constant_input_dim_deep_gp)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.LikelihoodLayer"]], "_construct_kernel() (in module gpflux.architectures.constant_input_dim_deep_gp)": [[2, "gpflux.architectures.constant_input_dim_deep_gp._construct_kernel"]], "_convert_to_tensor_fn() (gplayer method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.GPLayer._convert_to_tensor_fn"], [11, "gpflux.helpers.GPLayer._convert_to_tensor_fn"], [21, "gpflux.layers.gp_layer.GPLayer._convert_to_tensor_fn"], [22, "gpflux.layers.GPLayer._convert_to_tensor_fn"]], "_evaluate_deep_gp() (deepgp method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.DeepGP._evaluate_deep_gp"], [28, "gpflux.models.deep_gp.DeepGP._evaluate_deep_gp"], [29, "gpflux.models.DeepGP._evaluate_deep_gp"]], "_evaluate_likelihood() (deepgp method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.DeepGP._evaluate_likelihood"], [28, "gpflux.models.deep_gp.DeepGP._evaluate_likelihood"], [29, "gpflux.models.DeepGP._evaluate_likelihood"]], "_make_distribution_fn() (gplayer method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.GPLayer._make_distribution_fn"], [11, "gpflux.helpers.GPLayer._make_distribution_fn"], [21, "gpflux.layers.gp_layer.GPLayer._make_distribution_fn"], [22, "gpflux.layers.GPLayer._make_distribution_fn"]], "_validate_dtype() (deepgp static method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.DeepGP._validate_dtype"], [28, "gpflux.models.deep_gp.DeepGP._validate_dtype"], [29, "gpflux.models.DeepGP._validate_dtype"]], "_validate_num_data() (deepgp static method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.DeepGP._validate_num_data"], [28, "gpflux.models.deep_gp.DeepGP._validate_num_data"], [29, "gpflux.models.DeepGP._validate_num_data"]], "as_prediction_model() (deepgp method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.DeepGP.as_prediction_model"], [28, "gpflux.models.deep_gp.DeepGP.as_prediction_model"], [29, "gpflux.models.DeepGP.as_prediction_model"]], "as_training_model() (deepgp method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.DeepGP.as_training_model"], [28, "gpflux.models.deep_gp.DeepGP.as_training_model"], [29, "gpflux.models.DeepGP.as_training_model"]], "build_constant_input_dim_deep_gp() (in module gpflux.architectures.constant_input_dim_deep_gp)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.build_constant_input_dim_deep_gp"]], "call() (gplayer method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.GPLayer.call"], [11, "gpflux.helpers.GPLayer.call"], [21, "gpflux.layers.gp_layer.GPLayer.call"], [22, "gpflux.layers.GPLayer.call"]], "call() (likelihoodlayer method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.LikelihoodLayer.call"], [22, "gpflux.layers.LikelihoodLayer.call"], [24, "gpflux.layers.likelihood_layer.LikelihoodLayer.call"], [28, "gpflux.models.deep_gp.LikelihoodLayer.call"]], "construct_basic_inducing_variables() (in module gpflux.architectures.constant_input_dim_deep_gp)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.construct_basic_inducing_variables"]], "construct_basic_kernel() (in module gpflux.architectures.constant_input_dim_deep_gp)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.construct_basic_kernel"]], "construct_mean_function() (in module gpflux.architectures.constant_input_dim_deep_gp)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.construct_mean_function"]], "default_model_class (deepgp attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.DeepGP.default_model_class"], [28, "gpflux.models.deep_gp.DeepGP.default_model_class"], [29, "gpflux.models.DeepGP.default_model_class"]], "elbo() (deepgp method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.DeepGP.elbo"], [28, "gpflux.models.deep_gp.DeepGP.elbo"], [29, "gpflux.models.DeepGP.elbo"]], "f_layers (deepgp attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.DeepGP.f_layers"], [28, "gpflux.models.deep_gp.DeepGP.f_layers"], [29, "gpflux.models.DeepGP.f_layers"]], "full_cov (gplayer attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.GPLayer.full_cov"], [11, "gpflux.helpers.GPLayer.full_cov"], [21, "gpflux.layers.gp_layer.GPLayer.full_cov"], [22, "gpflux.layers.GPLayer.full_cov"]], "full_output_cov (gplayer attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.GPLayer.full_output_cov"], [11, "gpflux.helpers.GPLayer.full_output_cov"], [21, "gpflux.layers.gp_layer.GPLayer.full_output_cov"], [22, "gpflux.layers.GPLayer.full_output_cov"]], "gpflux.architectures.constant_input_dim_deep_gp": [[2, "module-gpflux.architectures.constant_input_dim_deep_gp"]], "inner_layer_qsqrt_factor (config attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.Config.inner_layer_qsqrt_factor"], [3, "gpflux.architectures.Config.inner_layer_qsqrt_factor"]], "likelihood_layer (deepgp attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.DeepGP.likelihood_layer"], [28, "gpflux.models.deep_gp.DeepGP.likelihood_layer"], [29, "gpflux.models.DeepGP.likelihood_layer"]], "likelihood_noise_variance (config attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.Config.likelihood_noise_variance"], [3, "gpflux.architectures.Config.likelihood_noise_variance"]], "num_data (deepgp attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.DeepGP.num_data"], [28, "gpflux.models.deep_gp.DeepGP.num_data"], [29, "gpflux.models.DeepGP.num_data"]], "num_data (gplayer attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.GPLayer.num_data"], [11, "gpflux.helpers.GPLayer.num_data"], [21, "gpflux.layers.gp_layer.GPLayer.num_data"], [22, "gpflux.layers.GPLayer.num_data"]], "num_inducing (config attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.Config.num_inducing"], [3, "gpflux.architectures.Config.num_inducing"]], "num_samples (gplayer attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.GPLayer.num_samples"], [11, "gpflux.helpers.GPLayer.num_samples"], [21, "gpflux.layers.gp_layer.GPLayer.num_samples"], [22, "gpflux.layers.GPLayer.num_samples"]], "predict() (gplayer method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.GPLayer.predict"], [11, "gpflux.helpers.GPLayer.predict"], [21, "gpflux.layers.gp_layer.GPLayer.predict"], [22, "gpflux.layers.GPLayer.predict"]], "predict_f() (deepgp method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.DeepGP.predict_f"], [28, "gpflux.models.deep_gp.DeepGP.predict_f"], [29, "gpflux.models.DeepGP.predict_f"]], "prior_kl() (gplayer method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.GPLayer.prior_kl"], [11, "gpflux.helpers.GPLayer.prior_kl"], [21, "gpflux.layers.gp_layer.GPLayer.prior_kl"], [22, "gpflux.layers.GPLayer.prior_kl"]], "q_mu (gplayer attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.GPLayer.q_mu"], [11, "gpflux.helpers.GPLayer.q_mu"], [21, "gpflux.layers.gp_layer.GPLayer.q_mu"], [22, "gpflux.layers.GPLayer.q_mu"]], "q_sqrt (gplayer attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.GPLayer.q_sqrt"], [11, "gpflux.helpers.GPLayer.q_sqrt"], [21, "gpflux.layers.gp_layer.GPLayer.q_sqrt"], [22, "gpflux.layers.GPLayer.q_sqrt"]], "sample() (gplayer method)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.GPLayer.sample"], [11, "gpflux.helpers.GPLayer.sample"], [21, "gpflux.layers.gp_layer.GPLayer.sample"], [22, "gpflux.layers.GPLayer.sample"]], "whiten (config attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.Config.whiten"], [3, "gpflux.architectures.Config.whiten"]], "whiten (gplayer attribute)": [[2, "gpflux.architectures.constant_input_dim_deep_gp.GPLayer.whiten"], [11, "gpflux.helpers.GPLayer.whiten"], [21, "gpflux.layers.gp_layer.GPLayer.whiten"], [22, "gpflux.layers.GPLayer.whiten"]], "config (class in gpflux.architectures)": [[3, "gpflux.architectures.Config"]], "build_constant_input_dim_deep_gp() (in module gpflux.architectures)": [[3, "gpflux.architectures.build_constant_input_dim_deep_gp"]], "gpflux.architectures": [[3, "module-gpflux.architectures"]], "tensorboard (class in gpflux.callbacks)": [[4, "gpflux.callbacks.TensorBoard"]], "gpflux.callbacks": [[4, "module-gpflux.callbacks"]], "keywords_to_monitor (tensorboard attribute)": [[4, "gpflux.callbacks.TensorBoard.keywords_to_monitor"]], "log_dir (tensorboard attribute)": [[4, "gpflux.callbacks.TensorBoard.log_dir"]], "on_epoch_end() (tensorboard method)": [[4, "gpflux.callbacks.TensorBoard.on_epoch_end"]], "on_train_batch_end() (tensorboard method)": [[4, "gpflux.callbacks.TensorBoard.on_train_batch_end"]], "set_model() (tensorboard method)": [[4, "gpflux.callbacks.TensorBoard.set_model"]], "update_freq (tensorboard attribute)": [[4, "gpflux.callbacks.TensorBoard.update_freq"]], "directlyparameterizednormaldiag (class in gpflux.encoders.directly_parameterized_encoder)": [[5, "gpflux.encoders.directly_parameterized_encoder.DirectlyParameterizedNormalDiag"]], "encoderinitializationerror": [[5, "gpflux.encoders.directly_parameterized_encoder.EncoderInitializationError"], [7, "gpflux.exceptions.EncoderInitializationError"]], "trackablelayer (class in gpflux.encoders.directly_parameterized_encoder)": [[5, "gpflux.encoders.directly_parameterized_encoder.TrackableLayer"]], "call() (directlyparameterizednormaldiag method)": [[5, "gpflux.encoders.directly_parameterized_encoder.DirectlyParameterizedNormalDiag.call"], [6, "gpflux.encoders.DirectlyParameterizedNormalDiag.call"]], "gpflux.encoders.directly_parameterized_encoder": [[5, "module-gpflux.encoders.directly_parameterized_encoder"]], "means (directlyparameterizednormaldiag attribute)": [[5, "gpflux.encoders.directly_parameterized_encoder.DirectlyParameterizedNormalDiag.means"], [6, "gpflux.encoders.DirectlyParameterizedNormalDiag.means"]], "stds (directlyparameterizednormaldiag attribute)": [[5, "gpflux.encoders.directly_parameterized_encoder.DirectlyParameterizedNormalDiag.stds"], [6, "gpflux.encoders.DirectlyParameterizedNormalDiag.stds"]], "directlyparameterizednormaldiag (class in gpflux.encoders)": [[6, "gpflux.encoders.DirectlyParameterizedNormalDiag"]], "gpflux.encoders": [[6, "module-gpflux.encoders"]], "gplayerincompatibilityexception": [[7, "gpflux.exceptions.GPLayerIncompatibilityException"], [21, "gpflux.layers.gp_layer.GPLayerIncompatibilityException"], [32, "gpflux.runtime_checks.GPLayerIncompatibilityException"]], "gpflux.exceptions": [[7, "module-gpflux.exceptions"]], "gpflux.experiment_support.ci_utils": [[8, "module-gpflux.experiment_support.ci_utils"]], "is_continuous_integration() (in module gpflux.experiment_support.ci_utils)": [[8, "gpflux.experiment_support.ci_utils.is_continuous_integration"]], "notebook_list() (in module gpflux.experiment_support.ci_utils)": [[8, "gpflux.experiment_support.ci_utils.notebook_list"]], "notebook_niter() (in module gpflux.experiment_support.ci_utils)": [[8, "gpflux.experiment_support.ci_utils.notebook_niter"]], "notebook_range() (in module gpflux.experiment_support.ci_utils)": [[8, "gpflux.experiment_support.ci_utils.notebook_range"]], "gpflux.experiment_support": [[9, "module-gpflux.experiment_support"]], "event (class in gpflux.experiment_support.tensorboard)": [[10, "gpflux.experiment_support.tensorboard.Event"]], "gpflux.experiment_support.tensorboard": [[10, "module-gpflux.experiment_support.tensorboard"]], "tensorboard_event_iterator() (in module gpflux.experiment_support.tensorboard)": [[10, "gpflux.experiment_support.tensorboard.tensorboard_event_iterator"]], "gplayer (class in gpflux.helpers)": [[11, "gpflux.helpers.GPLayer"]], "construct_basic_inducing_variables() (in module gpflux.helpers)": [[11, "gpflux.helpers.construct_basic_inducing_variables"]], "construct_basic_kernel() (in module gpflux.helpers)": [[11, "gpflux.helpers.construct_basic_kernel"]], "construct_gp_layer() (in module gpflux.helpers)": [[11, "gpflux.helpers.construct_gp_layer"]], "construct_mean_function() (in module gpflux.helpers)": [[11, "gpflux.helpers.construct_mean_function"]], "gpflux.helpers": [[11, "module-gpflux.helpers"]], "make_dataclass_from_class() (in module gpflux.helpers)": [[11, "gpflux.helpers.make_dataclass_from_class"]], "xavier_initialization_numpy() (in module gpflux.helpers)": [[11, "gpflux.helpers.xavier_initialization_numpy"]], "fourierfeaturesbase (class in gpflux.layers.basis_functions.fourier_features.base)": [[13, "gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase"]], "shapetype (in module gpflux.layers.basis_functions.fourier_features.base)": [[13, "gpflux.layers.basis_functions.fourier_features.base.ShapeType"]], "_compute_bases() (fourierfeaturesbase method)": [[13, "gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase._compute_bases"], [15, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.FourierFeaturesBase._compute_bases"]], "_compute_constant() (fourierfeaturesbase method)": [[13, "gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase._compute_constant"], [15, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.FourierFeaturesBase._compute_constant"]], "call() (fourierfeaturesbase method)": [[13, "gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase.call"], [15, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.FourierFeaturesBase.call"]], "compute_output_shape() (fourierfeaturesbase method)": [[13, "gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase.compute_output_shape"], [15, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.FourierFeaturesBase.compute_output_shape"]], "get_config() (fourierfeaturesbase method)": [[13, "gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase.get_config"], [15, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.FourierFeaturesBase.get_config"]], "gpflux.layers.basis_functions.fourier_features.base": [[13, "module-gpflux.layers.basis_functions.fourier_features.base"]], "orthogonalrandomfeatures (class in gpflux.layers.basis_functions.fourier_features)": [[14, "gpflux.layers.basis_functions.fourier_features.OrthogonalRandomFeatures"]], "quadraturefourierfeatures (class in gpflux.layers.basis_functions.fourier_features)": [[14, "gpflux.layers.basis_functions.fourier_features.QuadratureFourierFeatures"]], "randomfourierfeatures (class in gpflux.layers.basis_functions.fourier_features)": [[14, "gpflux.layers.basis_functions.fourier_features.RandomFourierFeatures"]], "randomfourierfeaturescosine (class in gpflux.layers.basis_functions.fourier_features)": [[14, "gpflux.layers.basis_functions.fourier_features.RandomFourierFeaturesCosine"]], "_compute_bases() (quadraturefourierfeatures method)": [[14, "gpflux.layers.basis_functions.fourier_features.QuadratureFourierFeatures._compute_bases"], [15, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.QuadratureFourierFeatures._compute_bases"], [16, "gpflux.layers.basis_functions.fourier_features.quadrature.QuadratureFourierFeatures._compute_bases"]], "_compute_bases() (randomfourierfeatures method)": [[14, "gpflux.layers.basis_functions.fourier_features.RandomFourierFeatures._compute_bases"], [17, "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeatures._compute_bases"]], "_compute_bases() (randomfourierfeaturescosine method)": [[14, "gpflux.layers.basis_functions.fourier_features.RandomFourierFeaturesCosine._compute_bases"], [17, "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeaturesCosine._compute_bases"]], "_compute_constant() (quadraturefourierfeatures method)": [[14, "gpflux.layers.basis_functions.fourier_features.QuadratureFourierFeatures._compute_constant"], [15, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.QuadratureFourierFeatures._compute_constant"], [16, "gpflux.layers.basis_functions.fourier_features.quadrature.QuadratureFourierFeatures._compute_constant"]], "_compute_constant() (randomfourierfeatures method)": [[14, "gpflux.layers.basis_functions.fourier_features.RandomFourierFeatures._compute_constant"], [17, "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeatures._compute_constant"]], "_compute_constant() (randomfourierfeaturescosine method)": [[14, "gpflux.layers.basis_functions.fourier_features.RandomFourierFeaturesCosine._compute_constant"], [17, "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeaturesCosine._compute_constant"]], "build() (quadraturefourierfeatures method)": [[14, "gpflux.layers.basis_functions.fourier_features.QuadratureFourierFeatures.build"], [15, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.QuadratureFourierFeatures.build"], [16, "gpflux.layers.basis_functions.fourier_features.quadrature.QuadratureFourierFeatures.build"]], "build() (randomfourierfeaturescosine method)": [[14, "gpflux.layers.basis_functions.fourier_features.RandomFourierFeaturesCosine.build"], [17, "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeaturesCosine.build"]], "gpflux.layers.basis_functions.fourier_features": [[14, "module-gpflux.layers.basis_functions.fourier_features"]], "fourierfeaturesbase (class in gpflux.layers.basis_functions.fourier_features.quadrature.gaussian)": [[15, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.FourierFeaturesBase"]], "quadraturefourierfeatures (class in gpflux.layers.basis_functions.fourier_features.quadrature.gaussian)": [[15, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.QuadratureFourierFeatures"]], "shapetype (in module gpflux.layers.basis_functions.fourier_features.quadrature.gaussian)": [[15, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian.ShapeType"]], "_bases_concat() (in module gpflux.layers.basis_functions.fourier_features.quadrature.gaussian)": [[15, "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian._bases_concat"]], "gpflux.layers.basis_functions.fourier_features.quadrature.gaussian": [[15, "module-gpflux.layers.basis_functions.fourier_features.quadrature.gaussian"]], "quadraturefourierfeatures (class in gpflux.layers.basis_functions.fourier_features.quadrature)": [[16, "gpflux.layers.basis_functions.fourier_features.quadrature.QuadratureFourierFeatures"]], "gpflux.layers.basis_functions.fourier_features.quadrature": [[16, "module-gpflux.layers.basis_functions.fourier_features.quadrature"]], "orthogonalrandomfeatures (class in gpflux.layers.basis_functions.fourier_features.random)": [[17, "gpflux.layers.basis_functions.fourier_features.random.OrthogonalRandomFeatures"]], "randomfourierfeatures (class in gpflux.layers.basis_functions.fourier_features.random)": [[17, "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeatures"]], "randomfourierfeaturescosine (class in gpflux.layers.basis_functions.fourier_features.random)": [[17, "gpflux.layers.basis_functions.fourier_features.random.RandomFourierFeaturesCosine"]], "gpflux.layers.basis_functions.fourier_features.random": [[17, "module-gpflux.layers.basis_functions.fourier_features.random"]], "_bases_concat() (in module gpflux.layers.basis_functions.fourier_features.utils)": [[18, "gpflux.layers.basis_functions.fourier_features.utils._bases_concat"]], "_bases_cosine() (in module gpflux.layers.basis_functions.fourier_features.utils)": [[18, "gpflux.layers.basis_functions.fourier_features.utils._bases_cosine"]], "gpflux.layers.basis_functions.fourier_features.utils": [[18, "module-gpflux.layers.basis_functions.fourier_features.utils"]], "gpflux.layers.basis_functions": [[19, "module-gpflux.layers.basis_functions"]], "bayesiandenselayer (class in gpflux.layers.bayesian_dense_layer)": [[20, "gpflux.layers.bayesian_dense_layer.BayesianDenseLayer"]], "shapetype (in module gpflux.layers.bayesian_dense_layer)": [[20, "gpflux.layers.bayesian_dense_layer.ShapeType"]], "trackablelayer (class in gpflux.layers.bayesian_dense_layer)": [[20, "gpflux.layers.bayesian_dense_layer.TrackableLayer"]], "build() (bayesiandenselayer method)": [[20, "gpflux.layers.bayesian_dense_layer.BayesianDenseLayer.build"], [22, "gpflux.layers.BayesianDenseLayer.build"]], "call() (bayesiandenselayer method)": [[20, "gpflux.layers.bayesian_dense_layer.BayesianDenseLayer.call"], [22, "gpflux.layers.BayesianDenseLayer.call"]], "gpflux.layers.bayesian_dense_layer": [[20, "module-gpflux.layers.bayesian_dense_layer"]], "predict_samples() (bayesiandenselayer method)": [[20, "gpflux.layers.bayesian_dense_layer.BayesianDenseLayer.predict_samples"], [22, "gpflux.layers.BayesianDenseLayer.predict_samples"]], "prior_kl() (bayesiandenselayer method)": [[20, "gpflux.layers.bayesian_dense_layer.BayesianDenseLayer.prior_kl"], [22, "gpflux.layers.BayesianDenseLayer.prior_kl"]], "xavier_initialization_numpy() (in module gpflux.layers.bayesian_dense_layer)": [[20, "gpflux.layers.bayesian_dense_layer.xavier_initialization_numpy"]], "gplayer (class in gpflux.layers.gp_layer)": [[21, "gpflux.layers.gp_layer.GPLayer"]], "sample (class in gpflux.layers.gp_layer)": [[21, "gpflux.layers.gp_layer.Sample"]], "__add__() (sample method)": [[21, "gpflux.layers.gp_layer.Sample.__add__"], [28, "gpflux.models.deep_gp.Sample.__add__"], [35, "gpflux.sampling.sample.Sample.__add__"]], "__call__() (sample method)": [[21, "gpflux.layers.gp_layer.Sample.__call__"], [28, "gpflux.models.deep_gp.Sample.__call__"], [35, "gpflux.sampling.sample.Sample.__call__"]], "_cholesky_with_jitter() (in module gpflux.layers.gp_layer)": [[21, "gpflux.layers.gp_layer._cholesky_with_jitter"]], "efficient_sample (in module gpflux.layers.gp_layer)": [[21, "gpflux.layers.gp_layer.efficient_sample"]], "gpflux.layers.gp_layer": [[21, "module-gpflux.layers.gp_layer"]], "verify_compatibility() (in module gpflux.layers.gp_layer)": [[21, "gpflux.layers.gp_layer.verify_compatibility"]], "bayesiandenselayer (class in gpflux.layers)": [[22, "gpflux.layers.BayesianDenseLayer"]], "gplayer (class in gpflux.layers)": [[22, "gpflux.layers.GPLayer"]], "latentvariablelayer (class in gpflux.layers)": [[22, "gpflux.layers.LatentVariableLayer"]], "layerwithobservations (class in gpflux.layers)": [[22, "gpflux.layers.LayerWithObservations"]], "likelihoodlayer (class in gpflux.layers)": [[22, "gpflux.layers.LikelihoodLayer"]], "trackablelayer (class in gpflux.layers)": [[22, "gpflux.layers.TrackableLayer"]], "_inference_latent_samples_and_loss() (latentvariablelayer method)": [[22, "gpflux.layers.LatentVariableLayer._inference_latent_samples_and_loss"], [23, "gpflux.layers.latent_variable_layer.LatentVariableLayer._inference_latent_samples_and_loss"]], "_inference_posteriors() (latentvariablelayer method)": [[22, "gpflux.layers.LatentVariableLayer._inference_posteriors"], [23, "gpflux.layers.latent_variable_layer.LatentVariableLayer._inference_posteriors"]], "_local_kls() (latentvariablelayer method)": [[22, "gpflux.layers.LatentVariableLayer._local_kls"], [23, "gpflux.layers.latent_variable_layer.LatentVariableLayer._local_kls"]], "_prediction_latent_samples() (latentvariablelayer method)": [[22, "gpflux.layers.LatentVariableLayer._prediction_latent_samples"], [23, "gpflux.layers.latent_variable_layer.LatentVariableLayer._prediction_latent_samples"]], "call() (latentvariablelayer method)": [[22, "gpflux.layers.LatentVariableLayer.call"], [23, "gpflux.layers.latent_variable_layer.LatentVariableLayer.call"]], "call() (layerwithobservations method)": [[22, "gpflux.layers.LayerWithObservations.call"], [23, "gpflux.layers.latent_variable_layer.LayerWithObservations.call"], [28, "gpflux.models.deep_gp.LayerWithObservations.call"]], "compositor (latentvariablelayer attribute)": [[22, "gpflux.layers.LatentVariableLayer.compositor"], [23, "gpflux.layers.latent_variable_layer.LatentVariableLayer.compositor"]], "encoder (latentvariablelayer attribute)": [[22, "gpflux.layers.LatentVariableLayer.encoder"], [23, "gpflux.layers.latent_variable_layer.LatentVariableLayer.encoder"]], "gpflux.layers": [[22, "module-gpflux.layers"]], "prior (latentvariablelayer attribute)": [[22, "gpflux.layers.LatentVariableLayer.prior"], [23, "gpflux.layers.latent_variable_layer.LatentVariableLayer.prior"]], "latentvariablelayer (class in gpflux.layers.latent_variable_layer)": [[23, "gpflux.layers.latent_variable_layer.LatentVariableLayer"]], "layerwithobservations (class in gpflux.layers.latent_variable_layer)": [[23, "gpflux.layers.latent_variable_layer.LayerWithObservations"]], "observationtype (in module gpflux.layers.latent_variable_layer)": [[23, "gpflux.layers.latent_variable_layer.ObservationType"]], "trackablelayer (class in gpflux.layers.latent_variable_layer)": [[23, "gpflux.layers.latent_variable_layer.TrackableLayer"]], "gpflux.layers.latent_variable_layer": [[23, "module-gpflux.layers.latent_variable_layer"]], "likelihoodlayer (class in gpflux.layers.likelihood_layer)": [[24, "gpflux.layers.likelihood_layer.LikelihoodLayer"]], "likelihoodoutputs (class in gpflux.layers.likelihood_layer)": [[24, "gpflux.layers.likelihood_layer.LikelihoodOutputs"]], "trackablelayer (class in gpflux.layers.likelihood_layer)": [[24, "gpflux.layers.likelihood_layer.TrackableLayer"]], "gpflux.layers.likelihood_layer": [[24, "module-gpflux.layers.likelihood_layer"]], "unwrap_dist() (in module gpflux.layers.likelihood_layer)": [[24, "gpflux.layers.likelihood_layer.unwrap_dist"]], "trackablelayer (class in gpflux.layers.trackable_layer)": [[25, "gpflux.layers.trackable_layer.TrackableLayer"]], "gpflux.layers.trackable_layer": [[25, "module-gpflux.layers.trackable_layer"]], "likelihoodloss (class in gpflux.losses)": [[26, "gpflux.losses.LikelihoodLoss"]], "call() (likelihoodloss method)": [[26, "gpflux.losses.LikelihoodLoss.call"]], "gpflux.losses": [[26, "module-gpflux.losses"]], "unwrap_dist() (in module gpflux.losses)": [[26, "gpflux.losses.unwrap_dist"]], "_cholesky_with_jitter() (in module gpflux.math)": [[27, "gpflux.math._cholesky_with_jitter"]], "compute_a_inv_b() (in module gpflux.math)": [[27, "gpflux.math.compute_A_inv_b"]], "gpflux.math": [[27, "module-gpflux.math"]], "deepgp (class in gpflux.models.deep_gp)": [[28, "gpflux.models.deep_gp.DeepGP"]], "layerwithobservations (class in gpflux.models.deep_gp)": [[28, "gpflux.models.deep_gp.LayerWithObservations"]], "likelihoodlayer (class in gpflux.models.deep_gp)": [[28, "gpflux.models.deep_gp.LikelihoodLayer"]], "sample (class in gpflux.models.deep_gp)": [[28, "gpflux.models.deep_gp.Sample"]], "gpflux.models.deep_gp": [[28, "module-gpflux.models.deep_gp"]], "deepgp (class in gpflux.models)": [[29, "gpflux.models.DeepGP"]], "gpflux.models": [[29, "module-gpflux.models"]], "natgradmodel (class in gpflux.optimization)": [[30, "gpflux.optimization.NatGradModel"]], "natgradwrapper (class in gpflux.optimization)": [[30, "gpflux.optimization.NatGradWrapper"]], "call() (natgradwrapper method)": [[30, "gpflux.optimization.NatGradWrapper.call"], [31, "gpflux.optimization.keras_natgrad.NatGradWrapper.call"]], "gpflux.optimization": [[30, "module-gpflux.optimization"]], "natgrad_layers (natgradmodel property)": [[30, "gpflux.optimization.NatGradModel.natgrad_layers"], [31, "gpflux.optimization.keras_natgrad.NatGradModel.natgrad_layers"]], "optimizer (natgradmodel property)": [[30, "gpflux.optimization.NatGradModel.optimizer"], [31, "gpflux.optimization.keras_natgrad.NatGradModel.optimizer"]], "train_step() (natgradmodel method)": [[30, "gpflux.optimization.NatGradModel.train_step"], [31, "gpflux.optimization.keras_natgrad.NatGradModel.train_step"]], "natgradmodel (class in gpflux.optimization.keras_natgrad)": [[31, "gpflux.optimization.keras_natgrad.NatGradModel"]], "natgradwrapper (class in gpflux.optimization.keras_natgrad)": [[31, "gpflux.optimization.keras_natgrad.NatGradWrapper"]], "gpflux.optimization.keras_natgrad": [[31, "module-gpflux.optimization.keras_natgrad"]], "gpflux.runtime_checks": [[32, "module-gpflux.runtime_checks"]], "verify_compatibility() (in module gpflux.runtime_checks)": [[32, "gpflux.runtime_checks.verify_compatibility"]], "kernelwithfeaturedecomposition (class in gpflux.sampling)": [[33, "gpflux.sampling.KernelWithFeatureDecomposition"]], "efficient_sample (in module gpflux.sampling)": [[33, "gpflux.sampling.efficient_sample"]], "feature_coefficients (kernelwithfeaturedecomposition property)": [[33, "gpflux.sampling.KernelWithFeatureDecomposition.feature_coefficients"], [34, "gpflux.sampling.kernel_with_feature_decomposition.KernelWithFeatureDecomposition.feature_coefficients"], [35, "gpflux.sampling.sample.KernelWithFeatureDecomposition.feature_coefficients"]], "feature_functions (kernelwithfeaturedecomposition property)": [[33, "gpflux.sampling.KernelWithFeatureDecomposition.feature_functions"], [34, "gpflux.sampling.kernel_with_feature_decomposition.KernelWithFeatureDecomposition.feature_functions"], [35, "gpflux.sampling.sample.KernelWithFeatureDecomposition.feature_functions"]], "gpflux.sampling": [[33, "module-gpflux.sampling"]], "k() (_approximatekernel method)": [[34, "gpflux.sampling.kernel_with_feature_decomposition._ApproximateKernel.K"]], "k_diag() (_approximatekernel method)": [[34, "gpflux.sampling.kernel_with_feature_decomposition._ApproximateKernel.K_diag"]], "kernelwithfeaturedecomposition (class in gpflux.sampling.kernel_with_feature_decomposition)": [[34, "gpflux.sampling.kernel_with_feature_decomposition.KernelWithFeatureDecomposition"]], "_approximatekernel (class in gpflux.sampling.kernel_with_feature_decomposition)": [[34, "gpflux.sampling.kernel_with_feature_decomposition._ApproximateKernel"]], "gpflux.sampling.kernel_with_feature_decomposition": [[34, "module-gpflux.sampling.kernel_with_feature_decomposition"]], "kernelwithfeaturedecomposition (class in gpflux.sampling.sample)": [[35, "gpflux.sampling.sample.KernelWithFeatureDecomposition"]], "sample (class in gpflux.sampling.sample)": [[35, "gpflux.sampling.sample.Sample"]], "_efficient_sample_conditional_gaussian() (in module gpflux.sampling.sample)": [[35, "gpflux.sampling.sample._efficient_sample_conditional_gaussian"]], "_efficient_sample_matheron_rule() (in module gpflux.sampling.sample)": [[35, "gpflux.sampling.sample._efficient_sample_matheron_rule"]], "compute_a_inv_b() (in module gpflux.sampling.sample)": [[35, "gpflux.sampling.sample.compute_A_inv_b"]], "draw_conditional_sample() (in module gpflux.sampling.sample)": [[35, "gpflux.sampling.sample.draw_conditional_sample"]], "efficient_sample (in module gpflux.sampling.sample)": [[35, "gpflux.sampling.sample.efficient_sample"]], "gpflux.sampling.sample": [[35, "module-gpflux.sampling.sample"]], "_cholesky_with_jitter() (in module gpflux.sampling.utils)": [[36, "gpflux.sampling.utils._cholesky_with_jitter"]], "draw_conditional_sample() (in module gpflux.sampling.utils)": [[36, "gpflux.sampling.utils.draw_conditional_sample"]], "gpflux.sampling.utils": [[36, "module-gpflux.sampling.utils"]], "observationtype (in module gpflux.types)": [[37, "gpflux.types.ObservationType"]], "shapetype (in module gpflux.types)": [[37, "gpflux.types.ShapeType"]], "gpflux.types": [[37, "module-gpflux.types"]], "unwrap_dist() (in module gpflux.types)": [[37, "gpflux.types.unwrap_dist"]], "gpflux.version": [[38, "module-gpflux.version"]]}})