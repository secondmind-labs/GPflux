{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "eb125016",
   "metadata": {
    "cell_marker": "\"\"\""
   },
   "source": [
    "# Benchmarks\n",
    "\n",
    "We benchmark GPflux' Deep GP on several UCI datasets.\n",
    "The code to run the experiments can be found in `benchmarking/main.py`. The results are stored in `benchmarking/runs/*.json`. In this script we aggregate and plot the outcomes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e98ed8c3",
   "metadata": {
    "nbsphinx": "hidden"
   },
   "outputs": [],
   "source": [
    "import glob\n",
    "import json\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1f27cbd4",
   "metadata": {
    "nbsphinx": "hidden"
   },
   "outputs": [],
   "source": [
    "LOGS = \"../../benchmarking/runs/*.json\"\n",
    "\n",
    "data = []\n",
    "for path in glob.glob(LOGS):\n",
    "    with open(path) as json_file:\n",
    "        data.append(json.load(json_file))\n",
    "\n",
    "df = pd.DataFrame.from_records(data)\n",
    "df = df.rename(columns={\"model_name\": \"model\"})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "15eaa7cb",
   "metadata": {
    "lines_to_next_cell": 0,
    "nbsphinx": "hidden"
   },
   "outputs": [],
   "source": [
    "table = df.groupby([\"dataset\", \"model\"]).agg(\n",
    "    {\n",
    "        \"split\": \"count\",\n",
    "        **{metric: [\"mean\", \"std\"] for metric in [\"mse\", \"nlpd\"]},\n",
    "    }\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "214338ae",
   "metadata": {
    "cell_marker": "\"\"\"",
    "lines_to_next_cell": 0
   },
   "source": [
    "We report the mean and std. dev. of the MSE and Negative Log Predictive Density (NLPD) measured by running the experiment on 5 different splits. We use 90% of the data for training and the remaining 10% for testing. The output is normalised to have zero mean and unit variance."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a70c2df2",
   "metadata": {},
   "outputs": [],
   "source": [
    "table"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "cell_metadata_json": true,
   "formats": "ipynb,py:percent"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
