gpflux.layers.basis_functions.fourier_features.quadrature
=========================================================

.. py:module:: gpflux.layers.basis_functions.fourier_features.quadrature

.. autoapi-nested-parse::

   A kernel's features and coefficients using quadrature Fourier features (QFF). 



Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/gpflux/layers/basis_functions/fourier_features/quadrature/gaussian/index




Package Contents
----------------

.. py:class:: QuadratureFourierFeatures(kernel: gpflow.kernels.Kernel, n_components: int, **kwargs: Mapping)

   Bases: :py:obj:`gpflux.layers.basis_functions.fourier_features.base.FourierFeaturesBase`


   The base class for all Fourier feature layers, used for both random Fourier feature layers and
   quadrature layers. We subclass :class:`tf.keras.layers.Layer`, so we must provide
   :method:`build` and :method:`call` methods.

   :param kernel: kernel to approximate using a set of Fourier bases.
   :param n_components: number of components (e.g. Monte Carlo samples,
       quadrature nodes, etc.) used to numerically approximate the kernel.


   .. py:method:: build(input_shape: gpflux.types.ShapeType) -> None

      Creates the variables of the layer.
      See `tf.keras.layers.Layer.build()
      <https://www.tensorflow.org/api_docs/python/tf/keras/layers/Layer#build>`_.



   .. py:method:: _compute_bases(inputs: gpflow.base.TensorType) -> tensorflow.Tensor

      Compute basis functions.

      :return: A tensor with the shape ``[N, 2M^D]``.



   .. py:method:: _compute_constant() -> tensorflow.Tensor

      Compute normalizing constant for basis functions.

      :return: A tensor with the shape ``[2M^D,]``



