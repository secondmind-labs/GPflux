gpflux.layers.basis_functions.fourier_features.base
===================================================

.. py:module:: gpflux.layers.basis_functions.fourier_features.base

.. autoapi-nested-parse::

   Shared functionality for stationary kernel basis functions. 







Module Contents
---------------

.. py:data:: ShapeType

   Union of valid types for describing the shape of a `tf.Tensor`\ (-like) object 


.. py:class:: FourierFeaturesBase(kernel: gpflow.kernels.Kernel, n_components: int, **kwargs: Mapping)

   Bases: :py:obj:`abc.ABC`, :py:obj:`gpflow.keras.tf_keras.layers.Layer`


   The base class for all Fourier feature layers, used for both random Fourier feature layers and
   quadrature layers. We subclass :class:`tf.keras.layers.Layer`, so we must provide
   :method:`build` and :method:`call` methods.

   :param kernel: kernel to approximate using a set of Fourier bases.
   :param n_components: number of components (e.g. Monte Carlo samples,
       quadrature nodes, etc.) used to numerically approximate the kernel.


   .. py:method:: call(inputs: gpflow.base.TensorType) -> tensorflow.Tensor

      Evaluate the basis functions at ``inputs``.

      :param inputs: The evaluation points, a tensor with the shape ``[N, D]``.

      :return: A tensor with the shape ``[N, M]``, or shape ``[P, N, M]'' in the multioutput case.



   .. py:method:: compute_output_shape(input_shape: gpflux.types.ShapeType) -> tensorflow.TensorShape

      Computes the output shape of the layer.
      See `tf.keras.layers.Layer.compute_output_shape()
      <https://www.tensorflow.org/api_docs/python/tf/keras/layers/Layer#compute_output_shape>`_.



   .. py:method:: get_config() -> Mapping

      Returns the config of the layer.
      See `tf.keras.layers.Layer.get_config()
      <https://www.tensorflow.org/api_docs/python/tf/keras/layers/Layer#get_config>`_.



   .. py:method:: _compute_constant() -> tensorflow.Tensor
      :abstractmethod:


      Compute normalizing constant for basis functions.



   .. py:method:: _compute_bases(inputs: gpflow.base.TensorType) -> tensorflow.Tensor
      :abstractmethod:


      Compute basis functions.



